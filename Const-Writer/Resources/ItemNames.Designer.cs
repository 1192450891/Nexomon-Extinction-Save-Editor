//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Save_Editor.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ItemNames {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ItemNames() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Const_Writer.Resources.ItemNames", typeof(ItemNames).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Bind
        ///Anti Binds
        ///Cures the &quot;BOUND&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Bind!
        ///You received [amount] Anti Binds!
        ///You found an Anti Bind!
        ///You found [amount] Anti Binds!
        ///Do you wish to use an Anti Bind on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Bind!
        ///You used an Anti Bind on [nickname]!
        ///Your opponent used an Anti Bind on [nickname]!
        ///Anti Bind has been enabled!
        ///Anti Bind has been disabled!
        ///You crafted an Anti Bind!
        ///You crafted [amount] Anti Binds!
        ///You don&apos;t h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_bind {
            get {
                return ResourceManager.GetString("anti_bind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Burn
        ///Anti Burns
        ///Cures the &quot;BURNING&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Burn!
        ///You received [amount] Anti Burns!
        ///You found an Anti Burn!
        ///You found [amount] Anti Burns!
        ///Do you wish to use an Anti Burn on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Burn!
        ///You used an Anti Burn on [nickname]!
        ///Your opponent used an Anti Burn on [nickname]!
        ///Anti Burn has been enabled!
        ///Anti Burn has been disabled!
        ///You crafted an Anti Burn!
        ///You crafted [amount] Anti Burns!
        ///You don&apos;t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_burn {
            get {
                return ResourceManager.GetString("anti_burn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Confusion
        ///Anti Confusions
        ///Cures the &quot;CONFUSED&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Confusion!
        ///You received [amount] Anti Confusions!
        ///You found an Anti Confusion!
        ///You found [amount] Anti Confusions!
        ///Do you wish to use an Anti Confusion on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Confusion!
        ///You used an Anti Confusion on [nickname]!
        ///Your opponent used an Anti Confusion on [nickname]!
        ///Anti Confusion has been enabled!
        ///Anti Confusion has been disabled!
        ///You craft [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_confusion {
            get {
                return ResourceManager.GetString("anti_confusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Freeze
        ///Anti Freezes
        ///Cures the &quot;FROZEN&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Freeze!
        ///You received [amount] Anti Freezes!
        ///You found an Anti Freeze!
        ///You found [amount] Anti Freezes!
        ///Do you wish to use an Anti Freeze on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Freeze!
        ///You used an Anti Freeze on [nickname]!
        ///Your opponent used an Anti Freeze on [nickname]!
        ///Anti Freeze has been enabled!
        ///Anti Freeze has been disabled!
        ///You crafted an Anti Freeze!
        ///You crafted [amoun [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_freeze {
            get {
                return ResourceManager.GetString("anti_freeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Paralyze
        ///Anti Paralyzes
        ///Cures the &quot;PARALYZED&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Paralyze!
        ///You received [amount] Anti Paralyzes!
        ///You found an Anti Paralyze!
        ///You found [amount] Anti Paralyzes!
        ///Do you wish to use an Anti Paralyze on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Paralyze!
        ///You used an Anti Paralyze on [nickname]!
        ///Your opponent used an Anti Paralyze on [nickname]!
        ///Anti Paralyze has been enabled!
        ///Anti Paralyze has been disabled!
        ///You crafted an Anti  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_paralyze {
            get {
                return ResourceManager.GetString("anti_paralyze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Poison
        ///Anti Poisons
        ///Cures the &quot;POISONED&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Poison!
        ///You received [amount] Anti Poisons!
        ///You found an Anti Poison!
        ///You found [amount] Anti Poisons!
        ///Do you wish to use an Anti Poison on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Poison!
        ///You used an Anti Poison on [nickname]!
        ///Your opponent used an Anti Poison on [nickname]!
        ///Anti Poison has been enabled!
        ///Anti Poison has been disabled!
        ///You crafted an Anti Poison!
        ///You crafted [amo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_poison {
            get {
                return ResourceManager.GetString("anti_poison", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Sleep
        ///Anti Sleeps
        ///Cures the &quot;ASLEEP&quot; status effect on a Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Anti Sleep!
        ///You received [amount] Anti Sleeps!
        ///You found an Anti Sleep!
        ///You found [amount] Anti Sleeps!
        ///Do you wish to use an Anti Sleep on [nickname]?
        ///[nickname] doesn&apos;t need an Anti Sleep!
        ///You used an Anti Sleep on [nickname]!
        ///Your opponent used an Anti Sleep on [nickname]!
        ///Anti Sleep has been enabled!
        ///Anti Sleep has been disabled!
        ///You crafted an Anti Sleep!
        ///You crafted [amount] Anti Sleep [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string anti_sleep {
            get {
                return ResourceManager.GetString("anti_sleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bronze Badge
        ///Bronze Badges
        ///A badge worn by rookie tamers. This proves that you&apos;re a member of the Tamer&apos;s Guild!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Bronze Badge!
        ///You received [amount] Bronze Badges!
        ///You found a Bronze Badge!
        ///You found [amount] Bronze Badges!
        ///Do you wish to use a Bronze Badge on [nickname]?
        ///[nickname] doesn&apos;t need a Bronze Badge!
        ///You used a Bronze Badge on [nickname]!
        ///Your opponent used a Bronze Badge on [nickname]!
        ///Bronze Badge has been enabled!
        ///Bronze Badge has been disabled!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_bronze {
            get {
                return ResourceManager.GetString("badge_bronze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drake Sigil
        ///Drake Sigils
        ///A gift of Lydia&apos;s. With this, the people of Drake Isles should now accept you into their village!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Drake Sigil!
        ///You received [amount] Drake Sigils!
        ///You found a Drake Sigil!
        ///You found [amount] Drake Sigils!
        ///Do you wish to use a Drake Sigil on [nickname]?
        ///[nickname] doesn&apos;t need a Drake Sigil!
        ///You used a Drake Sigil on [nickname]!
        ///Your opponent used a Drake Sigil on [nickname]!
        ///Drake Sigil has been enabled!
        ///Drake Sigil has been disabled!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_drake {
            get {
                return ResourceManager.GetString("badge_drake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Golden Badge
        ///Golden Badges
        ///A high ranking badge. Proof of your hard work and dedication for the Tamer&apos;s Guild!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Golden Badge!
        ///You received [amount] Golden Badges!
        ///You found a Golden Badge!
        ///You found [amount] Golden Badges!
        ///Do you wish to use a Golden Badge on [nickname]?
        ///[nickname] doesn&apos;t need a Golden Badge!
        ///You used a Golden Badge on [nickname]!
        ///Your opponent used a Golden Badge on [nickname]!
        ///Golden Badge has been enabled!
        ///Golden Badge has been disabled!
        ///You  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_gold {
            get {
                return ResourceManager.GetString("badge_gold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Laterian Sigil
        ///Laterian Sigils
        ///A mark of respect among Laterians, proof that you&apos;re a true warrior!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Laterian Sigil!
        ///You received [amount] Laterian Sigils!
        ///You found a Laterian Sigil!
        ///You found [amount] Laterian Sigils!
        ///Do you wish to use a Laterian Sigil on [nickname]?
        ///[nickname] doesn&apos;t need a Laterian Sigil!
        ///You used a Laterian Sigil on [nickname]!
        ///Your opponent used a Laterian Sigil on [nickname]!
        ///Laterian Sigil has been enabled!
        ///Laterian Sigil has been disabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_lateria {
            get {
                return ResourceManager.GetString("badge_lateria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grandmaster Badge
        ///Grandmaster Badges
        ///Only the strongest tamers in the entire world can wear this. Stand proud, [Playername]!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Grandmaster Badge!
        ///You received [amount] Grandmaster Badges!
        ///You found a Grandmaster Badge!
        ///You found [amount] Grandmaster Badges!
        ///Do you wish to use a Grandmaster Badge on [nickname]?
        ///[nickname] doesn&apos;t need a Grandmaster Badge!
        ///You used a Grandmaster Badge on [nickname]!
        ///Your opponent used a Grandmaster Badge on [nickname]!
        ///Grandmaster Bad [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_master {
            get {
                return ResourceManager.GetString("badge_master", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silver Badge
        ///Silver Badges
        ///A badge granted to those who perform heroic acts! Keep up the good work!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Silver Badge!
        ///You received [amount] Silver Badges!
        ///You found a Silver Badge!
        ///You found [amount] Silver Badges!
        ///Do you wish to use a Silver Badge on [nickname]?
        ///[nickname] doesn&apos;t need a Silver Badge!
        ///You used a Silver Badge on [nickname]!
        ///Your opponent used a Silver Badge on [nickname]!
        ///Silver Badge has been enabled!
        ///Silver Badge has been disabled!
        ///You crafted a S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string badge_silver {
            get {
                return ResourceManager.GetString("badge_silver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resurrection Blueprint
        ///Resurrection Blueprints
        ///A very complicated machine could be built with these...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Resurrection Blueprints!
        ///You received [amount] Resurrection Blueprints!
        ///You found the Resurrection Blueprint!
        ///You found [amount] Resurrection Blueprints!
        ///Do you wish to use the Resurrection Blueprint on [nickname]?
        ///[nickname] doesn&apos;t need the Resurrection Blueprint!
        ///You used the Resurrection Blueprint on [nickname]!
        ///Your opponent used the Resurrection Blueprint  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string blueprints_resurrection {
            get {
                return ResourceManager.GetString("blueprints_resurrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonnie&apos;s Access Card
        ///Bonnie&apos;s Access Cards
        ///Bonnie&apos;s credentials to let you enter Khan Woods, located in Parum!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received Bonnie&apos;s Access Card!
        ///You received [amount] Bonnie&apos;s Access Cards!
        ///You found Bonnie&apos;s Access Card!
        ///You found [amount] Bonnie&apos;s Access Cards!
        ///Do you wish to use Bonnie&apos;s Access Card on [nickname]?
        ///[nickname] doesn&apos;t need Bonnie&apos;s Access Card!
        ///You used Bonnie&apos;s Access Card on [nickname]!
        ///Your opponent used Bonnie&apos;s Access Card on [nickname]!
        ///Bonnie&apos;s Access C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string card_bonnie {
            get {
                return ResourceManager.GetString("card_bonnie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coin
        ///Coins
        ///This can be exchanged for goods and services.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Coin!
        ///You received [amount] Coins!
        ///You found a Coin!
        ///You found [amount] Coins!
        ///Do you wish to use a Coin on [nickname]?
        ///[nickname] doesn&apos;t need a Coin!
        ///You used a Coin on [nickname]!
        ///Your opponent used a Coin on [nickname]!
        ///Coin has been enabled!
        ///Coin has been disabled!
        ///You crafted a Coin!
        ///You crafted [amount] Coins!
        ///You don&apos;t have enough shards to craft a Coin!
        ///You don&apos;t have enough shards to craft [am [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string coins {
            get {
                return ResourceManager.GetString("coins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destruction Core (III)
        ///Destruction Cores (III)
        ///Boosts the ATK stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Destruction Core (III)!
        ///You received [amount] Destruction Cores (III)!
        ///You found a Destruction Core (III)!
        ///You found [amount] Destruction Cores (III)!
        ///Do you wish to use a Destruction Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Destruction Core (III)!
        ///You used a Destruction Core (III) on [nickname]!
        ///Your opponent used a Destruction Core (III) on [nickname]!
        ///Destruction Core ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_destruction_high {
            get {
                return ResourceManager.GetString("core_destruction_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destruction Core (I)
        ///Destruction Cores (I)
        ///Boosts the ATK stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Destruction Core (I)!
        ///You received [amount] Destruction Cores (I)!
        ///You found a Destruction Core (I)!
        ///You found [amount] Destruction Cores (I)!
        ///Do you wish to use a Destruction Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Destruction Core (I)!
        ///You used a Destruction Core (I) on [nickname]!
        ///Your opponent used a Destruction Core (I) on [nickname]!
        ///Destruction Core (I) has been enabled! [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_destruction_low {
            get {
                return ResourceManager.GetString("core_destruction_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destruction Core (II)
        ///Destruction Cores (II)
        ///Boosts the ATK stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Destruction Core (II)!
        ///You received [amount] Destruction Cores (II)!
        ///You found a Destruction Core (II)!
        ///You found [amount] Destruction Cores (II)!
        ///Do you wish to use a Destruction Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Destruction Core (II)!
        ///You used a Destruction Core (II) on [nickname]!
        ///Your opponent used a Destruction Core (II) on [nickname]!
        ///Destruction Core (II) has be [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_destruction_medium {
            get {
                return ResourceManager.GetString("core_destruction_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience Core (III)
        ///Experience Cores (III)
        ///Boosts the EXP earned by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Experience Core (III)!
        ///You received [amount] Experience Cores (III)!
        ///You found an Experience Core (III)!
        ///You found [amount] Experience Cores (III)!
        ///Do you wish to use an Experience Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need an Experience Core (III)!
        ///You used an Experience Core (III) on [nickname]!
        ///Your opponent used an Experience Core (III) on [nickname]!
        ///Experience Core (III [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_experience_high {
            get {
                return ResourceManager.GetString("core_experience_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience Core (I)
        ///Experience Cores (I)
        ///Boosts the EXP earned by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Experience Core (I)!
        ///You received [amount] Experience Cores (I)!
        ///You found an Experience Core (I)!
        ///You found [amount] Experience Cores (I)!
        ///Do you wish to use an Experience Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need an Experience Core (I)!
        ///You used an Experience Core (I) on [nickname]!
        ///Your opponent used an Experience Core (I) on [nickname]!
        ///Experience Core (I) has been enabled!
        ///E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_experience_low {
            get {
                return ResourceManager.GetString("core_experience_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experience Core (II)
        ///Experience Cores (II)
        ///Boosts the EXP earned by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Experience Core (II)!
        ///You received [amount] Experience Cores (II)!
        ///You found an Experience Core (II)!
        ///You found [amount] Experience Cores (II)!
        ///Do you wish to use an Experience Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need an Experience Core (II)!
        ///You used an Experience Core (II) on [nickname]!
        ///Your opponent used an Experience Core (II) on [nickname]!
        ///Experience Core (II) has been  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_experience_medium {
            get {
                return ResourceManager.GetString("core_experience_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Greed Core (III)
        ///Greed Cores (III)
        ///Boosts the amount of coins earned in battle by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Greed Core (III)!
        ///You received [amount] Greed Cores (III)!
        ///You found a Greed Core (III)!
        ///You found [amount] Greed Cores (III)!
        ///Do you wish to use a Greed Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Greed Core (III)!
        ///You used a Greed Core (III) on [nickname]!
        ///Your opponent used a Greed Core (III) on [nickname]!
        ///Greed Core (III) has been enabled!
        ///Greed Core (III) h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_greed_high {
            get {
                return ResourceManager.GetString("core_greed_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Greed Core (I)
        ///Greed Cores (I)
        ///Boosts the amount of coins earned in battle by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Greed Core (I)!
        ///You received [amount] Greed Cores (I)!
        ///You found a Greed Core (I)!
        ///You found [amount] Greed Cores (I)!
        ///Do you wish to use a Greed Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Greed Core (I)!
        ///You used a Greed Core (I) on [nickname]!
        ///Your opponent used a Greed Core (I) on [nickname]!
        ///Greed Core (I) has been enabled!
        ///Greed Core (I) has been disabled!
        ///You c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_greed_low {
            get {
                return ResourceManager.GetString("core_greed_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Greed Core (II)
        ///Greed Cores (II)
        ///Boosts the amount of coins earned in battle by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Greed Core (II)!
        ///You received [amount] Greed Cores (II)!
        ///You found a Greed Core (II)!
        ///You found [amount] Greed Cores (II)!
        ///Do you wish to use a Greed Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Greed Core (II)!
        ///You used a Greed Core (II) on [nickname]!
        ///Your opponent used a Greed Core (II) on [nickname]!
        ///Greed Core (II) has been enabled!
        ///Greed Core (II) has been disa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_greed_medium {
            get {
                return ResourceManager.GetString("core_greed_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immunity Core (III)
        ///Immunity Cores (III)
        ///Decreases the chance of receiving status effects by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Immunity Core (III)!
        ///You received [amount] Immunity Cores (III)!
        ///You found an Immunity Core (III)!
        ///You found [amount] Immunity Cores (III)!
        ///Do you wish to use an Immunity Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need an Immunity Core (III)!
        ///You used an Immunity Core (III) on [nickname]!
        ///Your opponent used an Immunity Core (III) on [nickname]!
        ///Immunity Core [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_immunity_high {
            get {
                return ResourceManager.GetString("core_immunity_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immunity Core (I)
        ///Immunity Cores (I)
        ///Decreases the chance of receiving status effects by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Immunity Core (I)!
        ///You received [amount] Immunity Cores (I)!
        ///You found an Immunity Core (I)!
        ///You found [amount] Immunity Cores (I)!
        ///Do you wish to use an Immunity Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need an Immunity Core (I)!
        ///You used an Immunity Core (I) on [nickname]!
        ///Your opponent used an Immunity Core (I) on [nickname]!
        ///Immunity Core (I) has been enable [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_immunity_low {
            get {
                return ResourceManager.GetString("core_immunity_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immunity Core (II)
        ///Immunity Cores (II)
        ///Decreases the chance of receiving status effects by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Immunity Core (II)!
        ///You received [amount] Immunity Cores (II)!
        ///You found an Immunity Core (II)!
        ///You found [amount] Immunity Cores (II)!
        ///Do you wish to use an Immunity Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need an Immunity Core (II)!
        ///You used an Immunity Core (II) on [nickname]!
        ///Your opponent used an Immunity Core (II) on [nickname]!
        ///Immunity Core (II) has  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_immunity_medium {
            get {
                return ResourceManager.GetString("core_immunity_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection Core (III)
        ///Protection Cores (III)
        ///Boosts the DEF stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Protection Core (III)!
        ///You received [amount] Protection Cores (III)!
        ///You found a Protection Core (III)!
        ///You found [amount] Protection Cores (III)!
        ///Do you wish to use a Protection Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Protection Core (III)!
        ///You used a Protection Core (III) on [nickname]!
        ///Your opponent used a Protection Core (III) on [nickname]!
        ///Protection Core (III) has be [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_protection_high {
            get {
                return ResourceManager.GetString("core_protection_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection Core (I)
        ///Protection Cores (I)
        ///Boosts the DEF stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Protection Core (I)!
        ///You received [amount] Protection Cores (I)!
        ///You found a Protection Core (I)!
        ///You found [amount] Protection Cores (I)!
        ///Do you wish to use a Protection Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Protection Core (I)!
        ///You used a Protection Core (I) on [nickname]!
        ///Your opponent used a Protection Core (I) on [nickname]!
        ///Protection Core (I) has been enabled!
        ///Protectio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_protection_low {
            get {
                return ResourceManager.GetString("core_protection_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection Core (II)
        ///Protection Cores (II)
        ///Boosts the DEF stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Protection Core (II)!
        ///You received [amount] Protection Cores (II)!
        ///You found a Protection Core (II)!
        ///You found [amount] Protection Cores (II)!
        ///Do you wish to use a Protection Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Protection Core (II)!
        ///You used a Protection Core (II) on [nickname]!
        ///Your opponent used a Protection Core (II) on [nickname]!
        ///Protection Core (II) has been enabled! [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_protection_medium {
            get {
                return ResourceManager.GetString("core_protection_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stamina Core (III)
        ///Stamina Cores (III)
        ///Boosts the STA stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Stamina Core (III)!
        ///You received [amount] Stamina Cores (III)!
        ///You found a Stamina Core (III)!
        ///You found [amount] Stamina Cores (III)!
        ///Do you wish to use a Stamina Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Stamina Core (III)!
        ///You used a Stamina Core (III) on [nickname]!
        ///Your opponent used a Stamina Core (III) on [nickname]!
        ///Stamina Core (III) has been enabled!
        ///Stamina Core (III) h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_stamina_high {
            get {
                return ResourceManager.GetString("core_stamina_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stamina Core (I)
        ///Stamina Cores (I)
        ///Boosts the STA stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Stamina Core (I)!
        ///You received [amount] Stamina Cores (I)!
        ///You found a Stamina Core (I)!
        ///You found [amount] Stamina Cores (I)!
        ///Do you wish to use a Stamina Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Stamina Core (I)!
        ///You used a Stamina Core (I) on [nickname]!
        ///Your opponent used a Stamina Core (I) on [nickname]!
        ///Stamina Core (I) has been enabled!
        ///Stamina Core (I) has been disabled!
        ///You c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_stamina_low {
            get {
                return ResourceManager.GetString("core_stamina_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stamina Core (II)
        ///Stamina Cores (II)
        ///Boosts the STA stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Stamina Core (II)!
        ///You received [amount] Stamina Cores (II)!
        ///You found a Stamina Core (II)!
        ///You found [amount] Stamina Cores (II)!
        ///Do you wish to use a Stamina Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Stamina Core (II)!
        ///You used a Stamina Core (II) on [nickname]!
        ///Your opponent used a Stamina Core (II) on [nickname]!
        ///Stamina Core (II) has been enabled!
        ///Stamina Core (II) has been disa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_stamina_medium {
            get {
                return ResourceManager.GetString("core_stamina_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synergy Core (III)
        ///Synergy Cores (III)
        ///Copies [value_1]% of the EXP received by other team members without having to fight.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Synergy Core (III)!
        ///You received [amount] Synergy Cores (III)!
        ///You found a Synergy Core (III)!
        ///You found [amount] Synergy Cores (III)!
        ///Do you wish to use a Synergy Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Synergy Core (III)!
        ///You used a Synergy Core (III) on [nickname]!
        ///Your opponent used a Synergy Core (III) on [nickname]!
        ///Synergy  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_synergy_high {
            get {
                return ResourceManager.GetString("core_synergy_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synergy Core (I)
        ///Synergy Cores (I)
        ///Copies [value_1]% of the EXP received by other team members without having to fight.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Synergy Core (I)!
        ///You received [amount] Synergy Cores (I)!
        ///You found a Synergy Core (I)!
        ///You found [amount] Synergy Cores (I)!
        ///Do you wish to use a Synergy Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Synergy Core (I)!
        ///You used a Synergy Core (I) on [nickname]!
        ///Your opponent used a Synergy Core (I) on [nickname]!
        ///Synergy Core (I) has been en [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_synergy_low {
            get {
                return ResourceManager.GetString("core_synergy_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synergy Core (II)
        ///Synergy Cores (II)
        ///Copies [value_1]% of the EXP received by other team members without having to fight.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Synergy Core (II)!
        ///You received [amount] Synergy Cores (II)!
        ///You found a Synergy Core (II)!
        ///You found [amount] Synergy Cores (II)!
        ///Do you wish to use a Synergy Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Synergy Core (II)!
        ///You used a Synergy Core (II) on [nickname]!
        ///Your opponent used a Synergy Core (II) on [nickname]!
        ///Synergy Core (II)  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_synergy_medium {
            get {
                return ResourceManager.GetString("core_synergy_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality Core (III)
        ///Vitality Cores (III)
        ///Boosts the HP stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Vitality Core (III)!
        ///You received [amount] Vitality Cores (III)!
        ///You found a Vitality Core (III)!
        ///You found [amount] Vitality Cores (III)!
        ///Do you wish to use a Vitality Core (III) on [nickname]?
        ///[nickname] doesn&apos;t need a Vitality Core (III)!
        ///You used a Vitality Core (III) on [nickname]!
        ///Your opponent used a Vitality Core (III) on [nickname]!
        ///Vitality Core (III) has been enabled!
        ///Vitality C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_vitality_high {
            get {
                return ResourceManager.GetString("core_vitality_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality Core (I)
        ///Vitality Cores (I)
        ///Boosts the HP stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Vitality Core (I)!
        ///You received [amount] Vitality Cores (I)!
        ///You found a Vitality Core (I)!
        ///You found [amount] Vitality Cores (I)!
        ///Do you wish to use a Vitality Core (I) on [nickname]?
        ///[nickname] doesn&apos;t need a Vitality Core (I)!
        ///You used a Vitality Core (I) on [nickname]!
        ///Your opponent used a Vitality Core (I) on [nickname]!
        ///Vitality Core (I) has been enabled!
        ///Vitality Core (I) has been disab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_vitality_low {
            get {
                return ResourceManager.GetString("core_vitality_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality Core (II)
        ///Vitality Cores (II)
        ///Boosts the HP stat by [value_1]%.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Vitality Core (II)!
        ///You received [amount] Vitality Cores (II)!
        ///You found a Vitality Core (II)!
        ///You found [amount] Vitality Cores (II)!
        ///Do you wish to use a Vitality Core (II) on [nickname]?
        ///[nickname] doesn&apos;t need a Vitality Core (II)!
        ///You used a Vitality Core (II) on [nickname]!
        ///Your opponent used a Vitality Core (II) on [nickname]!
        ///Vitality Core (II) has been enabled!
        ///Vitality Core (II) ha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string core_vitality_medium {
            get {
                return ResourceManager.GetString("core_vitality_medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diamond
        ///Diamonds
        ///A valuable form of currency used to purchase powerful and rare items.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Diamond!
        ///You received [amount] Diamonds!
        ///You found a Diamond!
        ///You found [amount] Diamonds!
        ///Do you wish to use a Diamond on [nickname]?
        ///[nickname] doesn&apos;t need a Diamond!
        ///You used a Diamond on [nickname]!
        ///Your opponent used a Diamond on [nickname]!
        ///Diamond has been enabled!
        ///Diamond has been disabled!
        ///You crafted a Diamond!
        ///You crafted [amount] Diamonds!
        ///You don&apos;t have enough  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string diamonds {
            get {
                return ResourceManager.GetString("diamonds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elixir
        ///Elixirs
        ///Restores both [value_1] HP and [value_2] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Elixir!
        ///You received [amount] Elixirs!
        ///You found an Elixir!
        ///You found [amount] Elixirs!
        ///Do you wish to use an Elixir on [nickname]?
        ///[nickname] doesn&apos;t need an Elixir!
        ///You used an Elixir on [nickname]!
        ///Your opponent used an Elixir on [nickname]!
        ///Elixir has been enabled!
        ///Elixir has been disabled!
        ///You crafted an Elixir!
        ///You crafted [amount] Elixirs!
        ///You don&apos;t have enough shards to craft an Elixir!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string elixir {
            get {
                return ResourceManager.GetString("elixir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Elixir
        ///Max Elixirs
        ///Restores both [value_1] HP and [value_2] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Max Elixir!
        ///You received [amount] Max Elixirs!
        ///You found a Max Elixir!
        ///You found [amount] Max Elixirs!
        ///Do you wish to use a Max Elixir on [nickname]?
        ///[nickname] doesn&apos;t need a Max Elixir!
        ///You used a Max Elixir on [nickname]!
        ///Your opponent used a Max Elixir on [nickname]!
        ///Max Elixir has been enabled!
        ///Max Elixir has been disabled!
        ///You crafted a Max Elixir!
        ///You crafted [amount] Max Elixirs!
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string elixir_max {
            get {
                return ResourceManager.GetString("elixir_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Super Elixir
        ///Super Elixirs
        ///Restores both [value_1] HP and [value_2] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Super Elixir!
        ///You received [amount] Super Elixirs!
        ///You found a Super Elixir!
        ///You found [amount] Super Elixirs!
        ///Do you wish to use a Super Elixir on [nickname]?
        ///[nickname] doesn&apos;t need a Super Elixir!
        ///You used a Super Elixir on [nickname]!
        ///Your opponent used a Super Elixir on [nickname]!
        ///Super Elixir has been enabled!
        ///Super Elixir has been disabled!
        ///You crafted a Super Elixir!
        ///You craft [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string elixir_super {
            get {
                return ResourceManager.GetString("elixir_super", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ultra Elixir
        ///Ultra Elixirs
        ///Restores both [value_1] HP and [value_2] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ultra Elixir!
        ///You received [amount] Ultra Elixirs!
        ///You found an Ultra Elixir!
        ///You found [amount] Ultra Elixirs!
        ///Do you wish to use an Ultra Elixir on [nickname]?
        ///[nickname] doesn&apos;t need an Ultra Elixir!
        ///You used an Ultra Elixir on [nickname]!
        ///Your opponent used an Ultra Elixir on [nickname]!
        ///Ultra Elixir has been enabled!
        ///Ultra Elixir has been disabled!
        ///You crafted an Ultra Elixir!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string elixir_ultra {
            get {
                return ResourceManager.GetString("elixir_ultra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ether
        ///Ethers
        ///Restores [value_1] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ether!
        ///You received [amount] Ethers!
        ///You found an Ether!
        ///You found [amount] Ethers!
        ///Do you wish to use an Ether on [nickname]?
        ///[nickname] doesn&apos;t need an Ether!
        ///You used an Ether on [nickname]!
        ///Your opponent used an Ether on [nickname]!
        ///Ether has been enabled!
        ///Ether has been disabled!
        ///You crafted an Ether!
        ///You crafted [amount] Ethers!
        ///You don&apos;t have enough shards to craft an Ether!
        ///You don&apos;t have enough shards to craf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ether {
            get {
                return ResourceManager.GetString("ether", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Ether
        ///Max Ethers
        ///Restores [value_1] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Max Ether!
        ///You received [amount] Max Ethers!
        ///You found a Max Ether!
        ///You found [amount] Max Ethers!
        ///Do you wish to use a Max Ether on [nickname]?
        ///[nickname] doesn&apos;t need a Max Ether!
        ///You used a Max Ether on [nickname]!
        ///Your opponent used a Max Ether on [nickname]!
        ///Max Ether has been enabled!
        ///Max Ether has been disabled!
        ///You crafted a Max Ether!
        ///You crafted [amount] Max Ethers!
        ///You don&apos;t have enough shards to craf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ether_max {
            get {
                return ResourceManager.GetString("ether_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Super Ether
        ///Super Ethers
        ///Restores [value_1] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Super Ether!
        ///You received [amount] Super Ethers!
        ///You found a Super Ether!
        ///You found [amount] Super Ethers!
        ///Do you wish to use a Super Ether on [nickname]?
        ///[nickname] doesn&apos;t need a Super Ether!
        ///You used a Super Ether on [nickname]!
        ///Your opponent used a Super Ether on [nickname]!
        ///Super Ether has been enabled!
        ///Super Ether has been disabled!
        ///You crafted a Super Ether!
        ///You crafted [amount] Super Ethers!
        ///You don&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ether_super {
            get {
                return ResourceManager.GetString("ether_super", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ultra Ether
        ///Ultra Ethers
        ///Restores [value_1] stamina.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ultra Ether!
        ///You received [amount] Ultra Ethers!
        ///You found an Ultra Ether!
        ///You found [amount] Ultra Ethers!
        ///Do you wish to use an Ultra Ether on [nickname]?
        ///[nickname] doesn&apos;t need an Ultra Ether!
        ///You used an Ultra Ether on [nickname]!
        ///Your opponent used an Ultra Ether on [nickname]!
        ///Ultra Ether has been enabled!
        ///Ultra Ether has been disabled!
        ///You crafted an Ultra Ether!
        ///You crafted [amount] Ultra Ethers!
        ///Y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ether_ultra {
            get {
                return ResourceManager.GetString("ether_ultra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explosives
        ///Explosives
        ///A bunch of explosives prepared for Videll.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Explosives!
        ///You received [amount] Explosives!
        ///You found the Explosives!
        ///You found [amount] Explosives!
        ///Do you wish to use the Explosives on [nickname]?
        ///[nickname] doesn&apos;t need the Explosives!
        ///You used the Explosives on [nickname]!
        ///Your opponent used the Explosives on [nickname]!
        ///Explosives has been enabled!
        ///Explosives has been disabled!
        ///You crafted the Explosives!
        ///You crafted [amount] Explosives [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string explosives {
            get {
                return ResourceManager.GetString("explosives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strawberry Cake
        ///Strawberry Cakes
        ///A delicious cake with strawberry top.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Strawberry Cake!
        ///You received [amount] Strawberry Cakes!
        ///You found a Strawberry Cake!
        ///You found [amount] Strawberry Cakes!
        ///Do you wish to use a Strawberry Cake on [nickname]?
        ///[nickname] doesn&apos;t need a Strawberry Cake!
        ///You used a Strawberry Cake on [nickname]!
        ///Your opponent used a Strawberry Cake on [nickname]!
        ///Strawberry Cake has been enabled!
        ///Strawberry Cake has been disabled!
        ///You crafted a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_1 {
            get {
                return ResourceManager.GetString("food_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Baguette
        ///Baguettes
        ///Especially made to remain fresh for days! It can be served with both sweet and salty dishes.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Baguette!
        ///You received [amount] Baguettes!
        ///You found a Baguette!
        ///You found [amount] Baguettes!
        ///Do you wish to use a Baguette on [nickname]?
        ///[nickname] doesn&apos;t need a Baguette!
        ///You used a Baguette on [nickname]!
        ///Your opponent used a Baguette on [nickname]!
        ///Baguette has been enabled!
        ///Baguette has been disabled!
        ///You crafted a Baguette!
        ///You crafted [amoun [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_10 {
            get {
                return ResourceManager.GetString("food_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donut
        ///Donuts
        ///A classic among tamers. It is not recommended to eat in large portions.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Donut!
        ///You received [amount] Donuts!
        ///You found a Donut!
        ///You found [amount] Donuts!
        ///Do you wish to use a Donut on [nickname]?
        ///[nickname] doesn&apos;t need a Donut!
        ///You used a Donut on [nickname]!
        ///Your opponent used a Donut on [nickname]!
        ///Donut has been enabled!
        ///Donut has been disabled!
        ///You crafted a Donut!
        ///You crafted [amount] Donuts!
        ///You don&apos;t have enough shards to craft a Donut!
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_11 {
            get {
                return ResourceManager.GetString("food_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chocolate Muffin
        ///Chocolate Muffins
        ///A soft muffin filled with the sweetest chocolate you can find!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Chocolate Muffin!
        ///You received [amount] Chocolate Muffins!
        ///You found a Chocolate Muffin!
        ///You found [amount] Chocolate Muffins!
        ///Do you wish to use a Chocolate Muffin on [nickname]?
        ///[nickname] doesn&apos;t need a Chocolate Muffin!
        ///You used a Chocolate Muffin on [nickname]!
        ///Your opponent used a Chocolate Muffin on [nickname]!
        ///Chocolate Muffin has been enabled!
        ///Chocolate Muff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_12 {
            get {
                return ResourceManager.GetString("food_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flan
        ///Flans
        ///A wiggly dessert with a cherry on top. It is not too sweet, just enough to give it proper flavor.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Flan!
        ///You received [amount] Flans!
        ///You found a Flan!
        ///You found [amount] Flans!
        ///Do you wish to use a Flan on [nickname]?
        ///[nickname] doesn&apos;t need a Flan!
        ///You used a Flan on [nickname]!
        ///Your opponent used a Flan on [nickname]!
        ///Flan has been enabled!
        ///Flan has been disabled!
        ///You crafted a Flan!
        ///You crafted [amount] Flans!
        ///You don&apos;t have enough shards to craf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_13 {
            get {
                return ResourceManager.GetString("food_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green cake
        ///Green cakes
        ///A delicious cake made with the finest green tea.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Green cake!
        ///You received [amount] Green cakes!
        ///You found a Green cake!
        ///You found [amount] Green cakes!
        ///Do you wish to use a Green cake on [nickname]?
        ///[nickname] doesn&apos;t need a Green cake!
        ///You used a Green cake on [nickname]!
        ///Your opponent used a Green cake on [nickname]!
        ///Green cake has been enabled!
        ///Green cake has been disabled!
        ///You crafted a Green cake!
        ///You crafted [amount] Green cakes!
        ///Y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_14 {
            get {
                return ResourceManager.GetString("food_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chocolate Cake
        ///Chocolate Cakes
        ///Only for chocolate fanatics. This rich flavored chocolate cake can be sometimes too sweet for some.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Chocolate Cake!
        ///You received [amount] Chocolate Cakes!
        ///You found a Chocolate Cake!
        ///You found [amount] Chocolate Cakes!
        ///Do you wish to use a Chocolate Cake on [nickname]?
        ///[nickname] doesn&apos;t need a Chocolate Cake!
        ///You used a Chocolate Cake on [nickname]!
        ///Your opponent used a Chocolate Cake on [nickname]!
        ///Chocolate Cake has been enabled!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_15 {
            get {
                return ResourceManager.GetString("food_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glazed Cake
        ///Glazed Cakes
        ///A delicious pie mixed with fresh berries and fruits on top.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Glazed Cake!
        ///You received [amount] Glazed Cakes!
        ///You found a Glazed Cake!
        ///You found [amount] Glazed Cakes!
        ///Do you wish to use a Glazed Cake on [nickname]?
        ///[nickname] doesn&apos;t need a Glazed Cake!
        ///You used a Glazed Cake on [nickname]!
        ///Your opponent used a Glazed Cake on [nickname]!
        ///Glazed Cake has been enabled!
        ///Glazed Cake has been disabled!
        ///You crafted a Glazed Cake!
        ///You crafted  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_16 {
            get {
                return ResourceManager.GetString("food_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cream Puff
        ///Cream Puffs
        ///A creamy dessert, it melts almost immediately inside your mouth.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Cream Puff!
        ///You received [amount] Cream Puffs!
        ///You found a Cream Puff!
        ///You found [amount] Cream Puffs!
        ///Do you wish to use a Cream Puff on [nickname]?
        ///[nickname] doesn&apos;t need a Cream Puff!
        ///You used a Cream Puff on [nickname]!
        ///Your opponent used a Cream Puff on [nickname]!
        ///Cream Puff has been enabled!
        ///Cream Puff has been disabled!
        ///You crafted a Cream Puff!
        ///You crafted [amount] [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_17 {
            get {
                return ResourceManager.GetString("food_17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pink Pecana
        ///Pink Pecanas
        ///A colorful dish. Very popular among young girls and some Nexomon too!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Pink Pecana!
        ///You received [amount] Pink Pecanas!
        ///You found a Pink Pecana!
        ///You found [amount] Pink Pecanas!
        ///Do you wish to use a Pink Pecana on [nickname]?
        ///[nickname] doesn&apos;t need a Pink Pecana!
        ///You used a Pink Pecana on [nickname]!
        ///Your opponent used a Pink Pecana on [nickname]!
        ///Pink Pecana has been enabled!
        ///Pink Pecana has been disabled!
        ///You crafted a Pink Pecana!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_18 {
            get {
                return ResourceManager.GetString("food_18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watermelon
        ///Watermelons
        ///A juicy fruit perfect for hot days. A favorite among tamers in the southern areas.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Watermelon!
        ///You received [amount] Watermelons!
        ///You found a Watermelon!
        ///You found [amount] Watermelons!
        ///Do you wish to use a Watermelon on [nickname]?
        ///[nickname] doesn&apos;t need a Watermelon!
        ///You used a Watermelon on [nickname]!
        ///Your opponent used a Watermelon on [nickname]!
        ///Watermelon has been enabled!
        ///Watermelon has been disabled!
        ///You crafted a Watermelon!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_19 {
            get {
                return ResourceManager.GetString("food_19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canele
        ///Caneles
        ///An original recipe! Chocolate cake with a red berry gelatin top.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Canele!
        ///You received [amount] Caneles!
        ///You found a Canele!
        ///You found [amount] Caneles!
        ///Do you wish to use a Canele on [nickname]?
        ///[nickname] doesn&apos;t need a Canele!
        ///You used a Canele on [nickname]!
        ///Your opponent used a Canele on [nickname]!
        ///Canele has been enabled!
        ///Canele has been disabled!
        ///You crafted a Canele!
        ///You crafted [amount] Caneles!
        ///You don&apos;t have enough shards to craft a C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_2 {
            get {
                return ResourceManager.GetString("food_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orange
        ///Oranges
        ///A sweet and juicy orange. It needs lots of sunshine and water to grow!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Orange!
        ///You received [amount] Oranges!
        ///You found an Orange!
        ///You found [amount] Oranges!
        ///Do you wish to use an Orange on [nickname]?
        ///[nickname] doesn&apos;t need an Orange!
        ///You used an Orange on [nickname]!
        ///Your opponent used an Orange on [nickname]!
        ///Orange has been enabled!
        ///Orange has been disabled!
        ///You crafted an Orange!
        ///You crafted [amount] Oranges!
        ///You don&apos;t have enough shards [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_20 {
            get {
                return ResourceManager.GetString("food_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Banana
        ///Bananas
        ///A standard banana. Hard to preserve for long periods.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Banana!
        ///You received [amount] Bananas!
        ///You found a Banana!
        ///You found [amount] Bananas!
        ///Do you wish to use a Banana on [nickname]?
        ///[nickname] doesn&apos;t need a Banana!
        ///You used a Banana on [nickname]!
        ///Your opponent used a Banana on [nickname]!
        ///Banana has been enabled!
        ///Banana has been disabled!
        ///You crafted a Banana!
        ///You crafted [amount] Bananas!
        ///You don&apos;t have enough shards to craft a Banana!
        ///You [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_21 {
            get {
                return ResourceManager.GetString("food_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple
        ///Apples
        ///A sweet apple, ideal for long trips. It is easily found in the outskirts of any town.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Apple!
        ///You received [amount] Apples!
        ///You found an Apple!
        ///You found [amount] Apples!
        ///Do you wish to use an Apple on [nickname]?
        ///[nickname] doesn&apos;t need an Apple!
        ///You used an Apple on [nickname]!
        ///Your opponent used an Apple on [nickname]!
        ///Apple has been enabled!
        ///Apple has been disabled!
        ///You crafted an Apple!
        ///You crafted [amount] Apples!
        ///You don&apos;t have enough shard [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_22 {
            get {
                return ResourceManager.GetString("food_22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grape
        ///Grapes
        ///Usually used as an ingredient for desserts but it can also be eaten by itself. Very healthy!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Grape!
        ///You received [amount] Grapes!
        ///You found a Grape!
        ///You found [amount] Grapes!
        ///Do you wish to use a Grape on [nickname]?
        ///[nickname] doesn&apos;t need a Grape!
        ///You used a Grape on [nickname]!
        ///Your opponent used a Grape on [nickname]!
        ///Grape has been enabled!
        ///Grape has been disabled!
        ///You crafted a Grape!
        ///You crafted [amount] Grapes!
        ///You don&apos;t have enough shard [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_23 {
            get {
                return ResourceManager.GetString("food_23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peach
        ///Peaches
        ///A seasonal fruit. Grab them while you can!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Peach!
        ///You received [amount] Peaches!
        ///You found a Peach!
        ///You found [amount] Peaches!
        ///Do you wish to use a Peach on [nickname]?
        ///[nickname] doesn&apos;t need a Peach!
        ///You used a Peach on [nickname]!
        ///Your opponent used a Peach on [nickname]!
        ///Peach has been enabled!
        ///Peach has been disabled!
        ///You crafted a Peach!
        ///You crafted [amount] Peaches!
        ///You don&apos;t have enough shards to craft a Peach!
        ///You don&apos;t have enough sha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_24 {
            get {
                return ResourceManager.GetString("food_24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green Pear
        ///Green Pears
        ///It is said this fruit is not only delicious and easy to find but it is also used to make refreshing and healthy beverages.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Green Pear!
        ///You received [amount] Green Pears!
        ///You found a Green Pear!
        ///You found [amount] Green Pears!
        ///Do you wish to use a Green Pear on [nickname]?
        ///[nickname] doesn&apos;t need a Green Pear!
        ///You used a Green Pear on [nickname]!
        ///Your opponent used a Green Pear on [nickname]!
        ///Green Pear has been enabled!
        ///Green Pear has been  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_25 {
            get {
                return ResourceManager.GetString("food_25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fries
        ///Fries
        ///Fast food. Good for a quick snack, very popular among young tamers.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Fries!
        ///You received [amount] Fries!
        ///You found a Fries!
        ///You found [amount] Fries!
        ///Do you wish to use a Fries on [nickname]?
        ///[nickname] doesn&apos;t need a Fries!
        ///You used a Fries on [nickname]!
        ///Your opponent used a Fries on [nickname]!
        ///Fries has been enabled!
        ///Fries has been disabled!
        ///You crafted a Fries!
        ///You crafted [amount] Fries!
        ///You don&apos;t have enough shards to craft a Fries!
        ///You don&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_26 {
            get {
                return ResourceManager.GetString("food_26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sausage
        ///Sausages
        ///A product usually made of fake meat. Not the healthiest dish but definitely has a strong flavor.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Sausage!
        ///You received [amount] Sausages!
        ///You found a Sausage!
        ///You found [amount] Sausages!
        ///Do you wish to use a Sausage on [nickname]?
        ///[nickname] doesn&apos;t need a Sausage!
        ///You used a Sausage on [nickname]!
        ///Your opponent used a Sausage on [nickname]!
        ///Sausage has been enabled!
        ///Sausage has been disabled!
        ///You crafted a Sausage!
        ///You crafted [amount] Sausag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_27 {
            get {
                return ResourceManager.GetString("food_27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pincho
        ///Pinchos
        ///A simple snack that includes a variety of fresh and delicious ingredients.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Pincho!
        ///You received [amount] Pinchos!
        ///You found a Pincho!
        ///You found [amount] Pinchos!
        ///Do you wish to use a Pincho on [nickname]?
        ///[nickname] doesn&apos;t need a Pincho!
        ///You used a Pincho on [nickname]!
        ///Your opponent used a Pincho on [nickname]!
        ///Pincho has been enabled!
        ///Pincho has been disabled!
        ///You crafted a Pincho!
        ///You crafted [amount] Pinchos!
        ///You don&apos;t have enough shards to [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_28 {
            get {
                return ResourceManager.GetString("food_28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Egg Tart
        ///Egg Tarts
        ///A very exclusive dish and it is not easy to cook. It requires a certain mastery to be cooked correctly. 
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Egg Tart!
        ///You received [amount] Egg Tarts!
        ///You found an Egg Tart!
        ///You found [amount] Egg Tarts!
        ///Do you wish to use an Egg Tart on [nickname]?
        ///[nickname] doesn&apos;t need an Egg Tart!
        ///You used an Egg Tart on [nickname]!
        ///Your opponent used an Egg Tart on [nickname]!
        ///Egg Tart has been enabled!
        ///Egg Tart has been disabled!
        ///You crafted an Egg Tart!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_29 {
            get {
                return ResourceManager.GetString("food_29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lemon Pie
        ///Lemon Pies
        ///A rich lemon-flavored  cake filled with delicious cream.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lemon Pie!
        ///You received [amount] Lemon Pies!
        ///You found a Lemon Pie!
        ///You found [amount] Lemon Pies!
        ///Do you wish to use a Lemon Pie on [nickname]?
        ///[nickname] doesn&apos;t need a Lemon Pie!
        ///You used a Lemon Pie on [nickname]!
        ///Your opponent used a Lemon Pie on [nickname]!
        ///Lemon Pie has been enabled!
        ///Lemon Pie has been disabled!
        ///You crafted a Lemon Pie!
        ///You crafted [amount] Lemon Pies!
        ///You don [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_3 {
            get {
                return ResourceManager.GetString("food_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meat
        ///Meats
        ///A simple dish that packs a strong flavor and a great source of energy!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Meat!
        ///You received [amount] Meats!
        ///You found a Meat!
        ///You found [amount] Meats!
        ///Do you wish to use a Meat on [nickname]?
        ///[nickname] doesn&apos;t need a Meat!
        ///You used a Meat on [nickname]!
        ///Your opponent used a Meat on [nickname]!
        ///Meat has been enabled!
        ///Meat has been disabled!
        ///You crafted a Meat!
        ///You crafted [amount] Meats!
        ///You don&apos;t have enough shards to craft a Meat!
        ///You don&apos;t have e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_30 {
            get {
                return ResourceManager.GetString("food_30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Onigiri
        ///Onigiris
        ///A traditional rice ball with subtle salty flavors.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Onigiri!
        ///You received [amount] Onigiris!
        ///You found an Onigiri!
        ///You found [amount] Onigiris!
        ///Do you wish to use an Onigiri on [nickname]?
        ///[nickname] doesn&apos;t need an Onigiri!
        ///You used an Onigiri on [nickname]!
        ///Your opponent used an Onigiri on [nickname]!
        ///Onigiri has been enabled!
        ///Onigiri has been disabled!
        ///You crafted an Onigiri!
        ///You crafted [amount] Onigiris!
        ///You don&apos;t have enough shards to cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_4 {
            get {
                return ResourceManager.GetString("food_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrimpgiri
        ///Shrimpgiris
        ///Delicious and fresh rice with a funny looking top. Ideal for youngsters.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Shrimpgiri!
        ///You received [amount] Shrimpgiris!
        ///You found a Shrimpgiri!
        ///You found [amount] Shrimpgiris!
        ///Do you wish to use a Shrimpgiri on [nickname]?
        ///[nickname] doesn&apos;t need a Shrimpgiri!
        ///You used a Shrimpgiri on [nickname]!
        ///Your opponent used a Shrimpgiri on [nickname]!
        ///Shrimpgiri has been enabled!
        ///Shrimpgiri has been disabled!
        ///You crafted a Shrimpgiri!
        ///You crafted  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_5 {
            get {
                return ResourceManager.GetString("food_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Taco
        ///Tacos
        ///Made of fresh ingredients and wrapped by a crunchy tortilla.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Taco!
        ///You received [amount] Tacos!
        ///You found a Taco!
        ///You found [amount] Tacos!
        ///Do you wish to use a Taco on [nickname]?
        ///[nickname] doesn&apos;t need a Taco!
        ///You used a Taco on [nickname]!
        ///Your opponent used a Taco on [nickname]!
        ///Taco has been enabled!
        ///Taco has been disabled!
        ///You crafted a Taco!
        ///You crafted [amount] Tacos!
        ///You don&apos;t have enough shards to craft a Taco!
        ///You don&apos;t have enough shar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_6 {
            get {
                return ResourceManager.GetString("food_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lacreme
        ///Lacremes
        ///Vanilla flavored ice cream filled with fresh nuts and sweet cream.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lacreme!
        ///You received [amount] Lacremes!
        ///You found a Lacreme!
        ///You found [amount] Lacremes!
        ///Do you wish to use a Lacreme on [nickname]?
        ///[nickname] doesn&apos;t need a Lacreme!
        ///You used a Lacreme on [nickname]!
        ///Your opponent used a Lacreme on [nickname]!
        ///Lacreme has been enabled!
        ///Lacreme has been disabled!
        ///You crafted a Lacreme!
        ///You crafted [amount] Lacremes!
        ///You don&apos;t have enough sha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_7 {
            get {
                return ResourceManager.GetString("food_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Omelette
        ///Omelettes
        ///Only fresh eggs are used to create this masterpiece. Ideal for breakfast.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Omelette!
        ///You received [amount] Omelettes!
        ///You found an Omelette!
        ///You found [amount] Omelettes!
        ///Do you wish to use an Omelette on [nickname]?
        ///[nickname] doesn&apos;t need an Omelette!
        ///You used an Omelette on [nickname]!
        ///Your opponent used an Omelette on [nickname]!
        ///Omelette has been enabled!
        ///Omelette has been disabled!
        ///You crafted an Omelette!
        ///You crafted [amount] Omelettes [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_8 {
            get {
                return ResourceManager.GetString("food_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pandulce
        ///Pandulces
        ///A simple dish, very simple to bake thus making it ideal for travelers. 
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Pandulce!
        ///You received [amount] Pandulces!
        ///You found a Pandulce!
        ///You found [amount] Pandulces!
        ///Do you wish to use a Pandulce on [nickname]?
        ///[nickname] doesn&apos;t need a Pandulce!
        ///You used a Pandulce on [nickname]!
        ///Your opponent used a Pandulce on [nickname]!
        ///Pandulce has been enabled!
        ///Pandulce has been disabled!
        ///You crafted a Pandulce!
        ///You crafted [amount] Pandulces!
        ///You do [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_9 {
            get {
                return ResourceManager.GetString("food_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perfect Berry
        ///Perfect Berries
        ///The ultimate meal! There is no Nexomon that can resist this!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Perfect Berry!
        ///You received [amount] Perfect Berries!
        ///You found a Perfect Berry!
        ///You found [amount] Perfect Berries!
        ///Do you wish to use a Perfect Berry on [nickname]?
        ///[nickname] doesn&apos;t need a Perfect Berry!
        ///You used a Perfect Berry on [nickname]!
        ///Your opponent used a Perfect Berry on [nickname]!
        ///Perfect Berry has been enabled!
        ///Perfect Berry has been disabled!
        ///You crafted  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string food_perfect {
            get {
                return ResourceManager.GetString("food_perfect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cadium Key
        ///Cadium Keys
        ///A key used to access Amelie&apos;s secret hideout in Cadium.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Cadium Key!
        ///You received [amount] Cadium Keys!
        ///You found the Cadium Key!
        ///You found [amount] Cadium Keys!
        ///Do you wish to use the Cadium Key on [nickname]?
        ///[nickname] doesn&apos;t need the Cadium Key!
        ///You used the Cadium Key on [nickname]!
        ///Your opponent used the Cadium Key on [nickname]!
        ///Cadium Key has been enabled!
        ///Cadium Key has been disabled!
        ///You crafted the Cadium Key!
        ///You crafted [am [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string key_amelie {
            get {
                return ResourceManager.GetString("key_amelie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tower Key
        ///Tower Keys
        ///Atlanta says that this key can open a locked door in the Cursed Tower...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tower Key!
        ///You received [amount] Tower Keys!
        ///You found the Tower Key!
        ///You found [amount] Tower Keys!
        ///Do you wish to use the Tower Key on [nickname]?
        ///[nickname] doesn&apos;t need the Tower Key!
        ///You used the Tower Key on [nickname]!
        ///Your opponent used the Tower Key on [nickname]!
        ///Tower Key has been enabled!
        ///Tower Key has been disabled!
        ///You crafted the Tower Key!
        ///You crafted [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string key_atlanta {
            get {
                return ResourceManager.GetString("key_atlanta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrine Key
        ///Shrine Keys
        ///A key given by Lydia used to open an ancient shrine located in Drake Isles.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Shrine Key!
        ///You received [amount] Shrine Keys!
        ///You found the Shrine Key!
        ///You found [amount] Shrine Keys!
        ///Do you wish to use the Shrine Key on [nickname]?
        ///[nickname] doesn&apos;t need the Shrine Key!
        ///You used the Shrine Key on [nickname]!
        ///Your opponent used the Shrine Key on [nickname]!
        ///Shrine Key has been enabled!
        ///Shrine Key has been disabled!
        ///You crafted the Shrine K [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string key_lydia {
            get {
                return ResourceManager.GetString("key_lydia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vault Key
        ///Vault Keys
        ///An ancient key that can unlock a secret treasure vault. But where?
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Vault Key!
        ///You received [amount] Vault Keys!
        ///You found a Vault Key!
        ///You found [amount] Vault Keys!
        ///Do you wish to use a Vault Key on [nickname]?
        ///[nickname] doesn&apos;t need a Vault Key!
        ///You used a Vault Key on [nickname]!
        ///Your opponent used a Vault Key on [nickname]!
        ///Vault Key has been enabled!
        ///Vault Key has been disabled!
        ///You crafted a Vault Key!
        ///You crafted [amount] Vault Keys [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string key_vault {
            get {
                return ResourceManager.GetString("key_vault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stolen Letter
        ///Stolen Letters
        ///A letter that was stolen from Liam, the mailman.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Stolen Letter!
        ///You received [amount] Stolen Letters!
        ///You found a Stolen Letter!
        ///You found [amount] Stolen Letters!
        ///Do you wish to use a Stolen Letter on [nickname]?
        ///[nickname] doesn&apos;t need a Stolen Letter!
        ///You used a Stolen Letter on [nickname]!
        ///Your opponent used a Stolen Letter on [nickname]!
        ///Stolen Letter has been enabled!
        ///Stolen Letter has been disabled!
        ///You crafted a Stolen Letter [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string letter_hannah {
            get {
                return ResourceManager.GetString("letter_hannah", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Golden Nexobox
        ///Golden Nexoboxes
        ///A mysterious artifact that contains a very rare Nexomon inside. Open it to find out!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Golden Nexobox!
        ///You received [amount] Golden Nexoboxes!
        ///You found a Golden Nexobox!
        ///You found [amount] Golden Nexoboxes!
        ///Do you wish to use a Golden Nexobox on [nickname]?
        ///[nickname] doesn&apos;t need a Golden Nexobox!
        ///You used a Golden Nexobox on [nickname]!
        ///Your opponent used a Golden Nexobox on [nickname]!
        ///Golden Nexobox has been enabled!
        ///Golden Nexo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexobox_golden {
            get {
                return ResourceManager.GetString("nexobox_golden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silver Nexobox
        ///Silver Nexoboxes
        ///A mysterious artifact that contains a rare Nexomon inside. Open it to find out!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Silver Nexobox!
        ///You received [amount] Silver Nexoboxes!
        ///You found a Silver Nexobox!
        ///You found [amount] Silver Nexoboxes!
        ///Do you wish to use a Silver Nexobox on [nickname]?
        ///[nickname] doesn&apos;t need a Silver Nexobox!
        ///You used a Silver Nexobox on [nickname]!
        ///Your opponent used a Silver Nexobox on [nickname]!
        ///Silver Nexobox has been enabled!
        ///Silver Nexobox h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexobox_silver {
            get {
                return ResourceManager.GetString("nexobox_silver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Black Nexomite
        ///The Black Nexomites
        ///A fake legendary gemstone of immeasurable value!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received The Black Nexomite!
        ///You received [amount] The Black Nexomites!
        ///You found The Black Nexomite!
        ///You found [amount] The Black Nexomites!
        ///Do you wish to use The Black Nexomite on [nickname]?
        ///[nickname] doesn&apos;t need The Black Nexomite!
        ///You used The Black Nexomite on [nickname]!
        ///Your opponent used The Black Nexomite on [nickname]!
        ///The Black Nexomite has been enabled!
        ///The Black Nexomite [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexomite_black {
            get {
                return ResourceManager.GetString("nexomite_black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electric NexoTrap
        ///Electric NexoTraps
        ///A NexoTrap designed to capture Electric-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Electric NexoTrap!
        ///You received [amount] Electric NexoTraps!
        ///You found an Electric NexoTrap!
        ///You found [amount] Electric NexoTraps!
        ///Do you wish to use an Electric NexoTrap on [nickname]?
        ///[nickname] doesn&apos;t need an Electric NexoTrap!
        ///You used an Electric NexoTrap on [nickname]!
        ///Your opponent used an Electric NexoTrap on [nickname]!
        ///Electric NexoTrap has been enabled!
        ///Electr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_electric {
            get {
                return ResourceManager.GetString("nexotrap_electric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fire Nexotrap
        ///Fire Nexotraps
        ///A Nexotrap designed to capture Fire-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Fire Nexotrap!
        ///You received [amount] Fire Nexotraps!
        ///You found a Fire Nexotrap!
        ///You found [amount] Fire Nexotraps!
        ///Do you wish to use a Fire Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Fire Nexotrap!
        ///You used a Fire Nexotrap on [nickname]!
        ///Your opponent used a Fire Nexotrap on [nickname]!
        ///Fire Nexotrap has been enabled!
        ///Fire Nexotrap has been disabled!
        ///You crafted a Fire Nexotra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_fire {
            get {
                return ResourceManager.GetString("nexotrap_fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ghost Nexotrap
        ///Ghost Nexotraps
        ///A Nexotrap designed to capture Ghost-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Ghost Nexotrap!
        ///You received [amount] Ghost Nexotraps!
        ///You found a Ghost Nexotrap!
        ///You found [amount] Ghost Nexotraps!
        ///Do you wish to use a Ghost Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Ghost Nexotrap!
        ///You used a Ghost Nexotrap on [nickname]!
        ///Your opponent used a Ghost Nexotrap on [nickname]!
        ///Ghost Nexotrap has been enabled!
        ///Ghost Nexotrap has been disabled!
        ///You crafted a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_ghost {
            get {
                return ResourceManager.GetString("nexotrap_ghost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Golden Nexotrap
        ///Golden Nexotraps
        ///A perfect Nexotrap that can capture any Nexomon no matter what!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Golden Nexotrap!
        ///You received [amount] Golden Nexotraps!
        ///You found a Golden Nexotrap!
        ///You found [amount] Golden Nexotraps!
        ///Do you wish to use a Golden Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Golden Nexotrap!
        ///You used a Golden Nexotrap on [nickname]!
        ///Your opponent used a Golden Nexotrap on [nickname]!
        ///Golden Nexotrap has been enabled!
        ///Golden Nexotrap has been [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_golden {
            get {
                return ResourceManager.GetString("nexotrap_golden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mineral Nexotrap
        ///Mineral Nexotraps
        ///A Nexotrap designed to capture Mineral-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Mineral Nexotrap!
        ///You received [amount] Mineral Nexotraps!
        ///You found a Mineral Nexotrap!
        ///You found [amount] Mineral Nexotraps!
        ///Do you wish to use a Mineral Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Mineral Nexotrap!
        ///You used a Mineral Nexotrap on [nickname]!
        ///Your opponent used a Mineral Nexotrap on [nickname]!
        ///Mineral Nexotrap has been enabled!
        ///Mineral Nexotrap has bee [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_mineral {
            get {
                return ResourceManager.GetString("nexotrap_mineral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal Nexotrap
        ///Normal Nexotraps
        ///A Nexotrap designed to capture Normal-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Normal Nexotrap!
        ///You received [amount] Normal Nexotraps!
        ///You found a Normal Nexotrap!
        ///You found [amount] Normal Nexotraps!
        ///Do you wish to use a Normal Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Normal Nexotrap!
        ///You used a Normal Nexotrap on [nickname]!
        ///Your opponent used a Normal Nexotrap on [nickname]!
        ///Normal Nexotrap has been enabled!
        ///Normal Nexotrap has been disabled!
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_normal {
            get {
                return ResourceManager.GetString("nexotrap_normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plant Nexotrap
        ///Plant Nexotraps
        ///A Nexotrap designed to capture Plant-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Plant Nexotrap!
        ///You received [amount] Plant Nexotraps!
        ///You found a Plant Nexotrap!
        ///You found [amount] Plant Nexotraps!
        ///Do you wish to use a Plant Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Plant Nexotrap!
        ///You used a Plant Nexotrap on [nickname]!
        ///Your opponent used a Plant Nexotrap on [nickname]!
        ///Plant Nexotrap has been enabled!
        ///Plant Nexotrap has been disabled!
        ///You crafted a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_plant {
            get {
                return ResourceManager.GetString("nexotrap_plant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Psychic Nexotrap
        ///Psychic Nexotraps
        ///A Nexotrap designed to capture Psychic-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Psychic Nexotrap!
        ///You received [amount] Psychic Nexotraps!
        ///You found a Psychic Nexotrap!
        ///You found [amount] Psychic Nexotraps!
        ///Do you wish to use a Psychic Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Psychic Nexotrap!
        ///You used a Psychic Nexotrap on [nickname]!
        ///Your opponent used a Psychic Nexotrap on [nickname]!
        ///Psychic Nexotrap has been enabled!
        ///Psychic Nexotrap has bee [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_psychic {
            get {
                return ResourceManager.GetString("nexotrap_psychic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nexotrap
        ///Nexotraps
        ///A basic tool used to capture wild Nexomon.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Nexotrap!
        ///You received [amount] Nexotraps!
        ///You found a Nexotrap!
        ///You found [amount] Nexotraps!
        ///Do you wish to use a Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Nexotrap!
        ///You used a Nexotrap on [nickname]!
        ///Your opponent used a Nexotrap on [nickname]!
        ///Nexotrap has been enabled!
        ///Nexotrap has been disabled!
        ///You crafted a Nexotrap!
        ///You crafted [amount] Nexotraps!
        ///You don&apos;t have enough shards to cra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_regular {
            get {
                return ResourceManager.GetString("nexotrap_regular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Water Nexotrap
        ///Water Nexotraps
        ///A Nexotrap designed to capture Water-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Water Nexotrap!
        ///You received [amount] Water Nexotraps!
        ///You found a Water Nexotrap!
        ///You found [amount] Water Nexotraps!
        ///Do you wish to use a Water Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Water Nexotrap!
        ///You used a Water Nexotrap on [nickname]!
        ///Your opponent used a Water Nexotrap on [nickname]!
        ///Water Nexotrap has been enabled!
        ///Water Nexotrap has been disabled!
        ///You crafted a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_water {
            get {
                return ResourceManager.GetString("nexotrap_water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wind Nexotrap
        ///Wind Nexotraps
        ///A Nexotrap designed to capture Wind-type Nexomon!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Wind Nexotrap!
        ///You received [amount] Wind Nexotraps!
        ///You found a Wind Nexotrap!
        ///You found [amount] Wind Nexotraps!
        ///Do you wish to use a Wind Nexotrap on [nickname]?
        ///[nickname] doesn&apos;t need a Wind Nexotrap!
        ///You used a Wind Nexotrap on [nickname]!
        ///Your opponent used a Wind Nexotrap on [nickname]!
        ///Wind Nexotrap has been enabled!
        ///Wind Nexotrap has been disabled!
        ///You crafted a Wind Nexotra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nexotrap_wind {
            get {
                return ResourceManager.GetString("nexotrap_wind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acegon Companion
        ///Acegon Companions
        ///An Acegon follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Acegon Companion!
        ///You received [amount] Acegon Companions!
        ///You found an Acegon Companion!
        ///You found [amount] Acegon Companions!
        ///Do you wish to use a Acegon on [nickname]?
        ///[nickname] doesn&apos;t need a Acegon!
        ///You used a Acegon on [nickname]!
        ///Your opponent used a Acegon on [nickname]!
        ///Acegon has been enabled!
        ///Acegon has been disabled!
        ///You crafted a Acegon!
        ///You crafted [amount] A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_acegon {
            get {
                return ResourceManager.GetString("pet_acegon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blizstrong Companion
        ///Blizstrongs
        ///A Blizstrong follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Blizstrong Companion!
        ///You received [amount] Blizstrongs!
        ///You found a Blizstrong Companion!
        ///You found [amount] Blizstrongs!
        ///Do you wish to use a Blizstrong on [nickname]?
        ///[nickname] doesn&apos;t need a Blizstrong!
        ///You used a Blizstrong on [nickname]!
        ///Your opponent used a Blizstrong on [nickname]!
        ///Blizstrong has been enabled!
        ///Blizstrong has been disabled!
        ///You crafted a Blizstrong!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_blizstrong {
            get {
                return ResourceManager.GetString("pet_blizstrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cruff Companion
        ///Cruffs
        ///A Cruff follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Cruff Companion!
        ///You received [amount] Cruffs!
        ///You found a Cruff Companion!
        ///You found [amount] Cruffs!
        ///Do you wish to use a Cruff on [nickname]?
        ///[nickname] doesn&apos;t need a Cruff!
        ///You used a Cruff on [nickname]!
        ///Your opponent used a Cruff on [nickname]!
        ///Cruff has been enabled!
        ///Cruff has been disabled!
        ///You crafted a Cruff!
        ///You crafted [amount] Cruffs!
        ///You don&apos;t have enough shards to craft a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_cruff {
            get {
                return ResourceManager.GetString("pet_cruff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dinja Companion
        ///Dinjas
        ///A Dinja follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Dinja Companion!
        ///You received [amount] Dinjas!
        ///You found a Dinja Companion!
        ///You found [amount] Dinjas!
        ///Do you wish to use a Dinja on [nickname]?
        ///[nickname] doesn&apos;t need a Dinja!
        ///You used a Dinja on [nickname]!
        ///Your opponent used a Dinja on [nickname]!
        ///Dinja has been enabled!
        ///Dinja has been disabled!
        ///You crafted a Dinja!
        ///You crafted [amount] Dinjas!
        ///You don&apos;t have enough shards to craft a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_dinja {
            get {
                return ResourceManager.GetString("pet_dinja", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dreddiful Companion
        ///Dreddifuls
        ///A Dreddiful follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Dreddiful Companion!
        ///You received [amount] Dreddifuls!
        ///You found a Dreddiful Companion!
        ///You found [amount] Dreddifuls!
        ///Do you wish to use a Dreddiful on [nickname]?
        ///[nickname] doesn&apos;t need a Dreddiful!
        ///You used a Dreddiful on [nickname]!
        ///Your opponent used a Dreddiful on [nickname]!
        ///Dreddiful has been enabled!
        ///Dreddiful has been disabled!
        ///You crafted a Dreddiful!
        ///You crafted [ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_dreddiful {
            get {
                return ResourceManager.GetString("pet_dreddiful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fortle Companion
        ///Fortles
        ///A Fortle follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Fortle Companion!
        ///You received [amount] Fortles!
        ///You found a Fortle Companion!
        ///You found [amount] Fortles!
        ///Do you wish to use a Fortle on [nickname]?
        ///[nickname] doesn&apos;t need a Fortle!
        ///You used a Fortle on [nickname]!
        ///Your opponent used a Fortle on [nickname]!
        ///Fortle has been enabled!
        ///Fortle has been disabled!
        ///You crafted a Fortle!
        ///You crafted [amount] Fortles!
        ///You don&apos;t have enough sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_fortle {
            get {
                return ResourceManager.GetString("pet_fortle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gekoko Companion
        ///Gekokos
        ///A Gekoko follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Gekoko Companion!
        ///You received [amount] Gekokos!
        ///You found a Gekoko Companion!
        ///You found [amount] Gekokos!
        ///Do you wish to use a Gekoko on [nickname]?
        ///[nickname] doesn&apos;t need a Gekoko!
        ///You used a Gekoko on [nickname]!
        ///Your opponent used a Gekoko on [nickname]!
        ///Gekoko has been enabled!
        ///Gekoko has been disabled!
        ///You crafted a Gekoko!
        ///You crafted [amount] Gekokos!
        ///You don&apos;t have enough sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_gekoko {
            get {
                return ResourceManager.GetString("pet_gekoko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glidlee Companion
        ///Glidlees
        ///A Glidlee follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Glidlee Companion!
        ///You received [amount] Glidlees!
        ///You found a Glidlee Companion!
        ///You found [amount] Glidlees!
        ///Do you wish to use a Glidlee on [nickname]?
        ///[nickname] doesn&apos;t need a Glidlee!
        ///You used a Glidlee on [nickname]!
        ///Your opponent used a Glidlee on [nickname]!
        ///Glidlee has been enabled!
        ///Glidlee has been disabled!
        ///You crafted a Glidlee!
        ///You crafted [amount] Glidlees!
        ///You don&apos;t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_glidlee {
            get {
                return ResourceManager.GetString("pet_glidlee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holoch Companion
        ///Holochs
        ///A Holoch follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Holoch Companion!
        ///You received [amount] Holochs!
        ///You found a Holoch Companion!
        ///You found [amount] Holochs!
        ///Do you wish to use a Holoch on [nickname]?
        ///[nickname] doesn&apos;t need a Holoch!
        ///You used a Holoch on [nickname]!
        ///Your opponent used a Holoch on [nickname]!
        ///Holoch has been enabled!
        ///Holoch has been disabled!
        ///You crafted a Holoch!
        ///You crafted [amount] Holochs!
        ///You don&apos;t have enough sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_holoch {
            get {
                return ResourceManager.GetString("pet_holoch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imburion Companion
        ///Imburions
        ///A Imburion follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Imburion Companion!
        ///You received [amount] Imburions!
        ///You found a Imburion Companion!
        ///You found [amount] Imburions!
        ///Do you wish to use a Imburion on [nickname]?
        ///[nickname] doesn&apos;t need a Imburion!
        ///You used a Imburion on [nickname]!
        ///Your opponent used a Imburion on [nickname]!
        ///Imburion has been enabled!
        ///Imburion has been disabled!
        ///You crafted a Imburion!
        ///You crafted [amount] Imburi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_imburion {
            get {
                return ResourceManager.GetString("pet_imburion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lioness Companion
        ///Lionesses
        ///A Lioness follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lioness Companion!
        ///You received [amount] Lionesses!
        ///You found a Lioness Companion!
        ///You found [amount] Lionesses!
        ///Do you wish to use a Lioness on [nickname]?
        ///[nickname] doesn&apos;t need a Lioness!
        ///You used a Lioness on [nickname]!
        ///Your opponent used a Lioness on [nickname]!
        ///Lioness has been enabled!
        ///Lioness has been disabled!
        ///You crafted a Lioness!
        ///You crafted [amount] Lionesses!
        ///You d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_lioness {
            get {
                return ResourceManager.GetString("pet_lioness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lume Companion
        ///Lumes
        ///A Lume follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lume Companion!
        ///You received [amount] Lumes!
        ///You found a Lume Companion!
        ///You found [amount] Lumes!
        ///Do you wish to use a Lume on [nickname]?
        ///[nickname] doesn&apos;t need a Lume!
        ///You used a Lume on [nickname]!
        ///Your opponent used a Lume on [nickname]!
        ///Lume has been enabled!
        ///Lume has been disabled!
        ///You crafted a Lume!
        ///You crafted [amount] Lumes!
        ///You don&apos;t have enough shards to craft a Lume!
        ///You don [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_lume {
            get {
                return ResourceManager.GetString("pet_lume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lunabelle Companion
        ///Lunabelles
        ///A Lunabelle follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lunabelle Companion!
        ///You received [amount] Lunabelles!
        ///You found a Lunabelle Companion!
        ///You found [amount] Lunabelles!
        ///Do you wish to use a Lunabelle on [nickname]?
        ///[nickname] doesn&apos;t need a Lunabelle!
        ///You used a Lunabelle on [nickname]!
        ///Your opponent used a Lunabelle on [nickname]!
        ///Lunabelle has been enabled!
        ///Lunabelle has been disabled!
        ///You crafted a Lunabelle!
        ///You crafted [ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_lunabelle {
            get {
                return ResourceManager.GetString("pet_lunabelle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Malitress Companion
        ///Malitresses Companions
        ///A Malitress companion! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Malitress Companion!
        ///You received [amount] Malitresses Companions!
        ///You found a Malitress Companion!
        ///You found [amount] Malitresses!
        ///Do you wish to use a Mailtress on [nickname]?
        ///[nickname] doesn&apos;t need a Mailtress!
        ///You used a Mailtress on [nickname]!
        ///Your opponent used a Mailtress on [nickname]!
        ///Mailtress has been enabled!
        ///Mailtress has been disabled!
        ///You crafted a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_malitress {
            get {
                return ResourceManager.GetString("pet_malitress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mara Companion
        ///Maras
        ///A Mara follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Mara Companion!
        ///You received [amount] Maras!
        ///You found a Mara Companion!
        ///You found [amount] Maras!
        ///Do you wish to use a Mara on [nickname]?
        ///[nickname] doesn&apos;t need a Mara!
        ///You used a Mara on [nickname]!
        ///Your opponent used a Mara on [nickname]!
        ///Mara has been enabled!
        ///Mara has been disabled!
        ///You crafted a Mara!
        ///You crafted [amount] Maras!
        ///You don&apos;t have enough shards to craft a Mara!
        ///You don [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_mara {
            get {
                return ResourceManager.GetString("pet_mara", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Masquiti Companion
        ///Masquitis
        ///A Masquiti follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Masquiti Companion!
        ///You received [amount] Masquitis!
        ///You found a Masquiti Companion!
        ///You found [amount] Masquitis!
        ///Do you wish to use a Masquiti on [nickname]?
        ///[nickname] doesn&apos;t need a Masquiti!
        ///You used a Masquiti on [nickname]!
        ///Your opponent used a Masquiti on [nickname]!
        ///Masquiti has been enabled!
        ///Masquiti has been disabled!
        ///You crafted a Masquiti!
        ///You crafted [amount] Masqui [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_masqiti {
            get {
                return ResourceManager.GetString("pet_masqiti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mearn Companion
        ///Mearns
        ///A Mearn follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Mearn Companion!
        ///You received [amount] Mearns!
        ///You found a Mearn Companion!
        ///You found [amount] Mearns!
        ///Do you wish to use a Mearn on [nickname]?
        ///[nickname] doesn&apos;t need a Mearn!
        ///You used a Mearn on [nickname]!
        ///Your opponent used a Mearn on [nickname]!
        ///Mearn has been enabled!
        ///Mearn has been disabled!
        ///You crafted a Mearn!
        ///You crafted [amount] Mearns!
        ///You don&apos;t have enough shards to craft a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_mearn {
            get {
                return ResourceManager.GetString("pet_mearn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mermella Companion
        ///Mermellas
        ///A Mermella follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Mermella Companion!
        ///You received [amount] Mermellas!
        ///You found a Mermella Companion!
        ///You found [amount] Mermellas!
        ///Do you wish to use a Mermella on [nickname]?
        ///[nickname] doesn&apos;t need a Mermella!
        ///You used a Mermella on [nickname]!
        ///Your opponent used a Mermella on [nickname]!
        ///Mermella has been enabled!
        ///Mermella has been disabled!
        ///You crafted a Mermella!
        ///You crafted [amount] Mermel [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_mermella {
            get {
                return ResourceManager.GetString("pet_mermella", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minet Companion
        ///Minets
        ///A Minet follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Minet Companion!
        ///You received [amount] Minets!
        ///You found a Minet Companion!
        ///You found [amount] Minets!
        ///Do you wish to use a Minet on [nickname]?
        ///[nickname] doesn&apos;t need a Minet!
        ///You used a Minet on [nickname]!
        ///Your opponent used a Minet on [nickname]!
        ///Minet has been enabled!
        ///Minet has been disabled!
        ///You crafted a Minet!
        ///You crafted [amount] Minets!
        ///You don&apos;t have enough shards to craft a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_minet {
            get {
                return ResourceManager.GetString("pet_minet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moonica Companion
        ///Moonicas
        ///A Moonica follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Moonica Companion!
        ///You received [amount] Moonicas!
        ///You found a Moonica Companion!
        ///You found [amount] Moonicas!
        ///Do you wish to use a Moonica on [nickname]?
        ///[nickname] doesn&apos;t need a Moonica!
        ///You used a Moonica on [nickname]!
        ///Your opponent used a Moonica on [nickname]!
        ///Moonica has been enabled!
        ///Moonica has been disabled!
        ///You crafted a Moonica!
        ///You crafted [amount] Moonicas!
        ///You don&apos;t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_moonica {
            get {
                return ResourceManager.GetString("pet_moonica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Noki Companion
        ///Nokis
        ///A Noki follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Noki Companion!
        ///You received [amount] Nokis!
        ///You found a Noki Companion!
        ///You found [amount] Nokis!
        ///Do you wish to use a Noki on [nickname]?
        ///[nickname] doesn&apos;t need a Noki!
        ///You used a Noki on [nickname]!
        ///Your opponent used a Noki on [nickname]!
        ///Noki has been enabled!
        ///Noki has been disabled!
        ///You crafted a Noki!
        ///You crafted [amount] Nokis!
        ///You don&apos;t have enough shards to craft a Noki!
        ///You don [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_noki {
            get {
                return ResourceManager.GetString("pet_noki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paupo Companion
        ///Paupos
        ///A Paupo follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Paupo Companion!
        ///You received [amount] Paupos!
        ///You found a Paupo Companion!
        ///You found [amount] Paupos!
        ///Do you wish to use a Paupo on [nickname]?
        ///[nickname] doesn&apos;t need a Paupo!
        ///You used a Paupo on [nickname]!
        ///Your opponent used a Paupo on [nickname]!
        ///Paupo has been enabled!
        ///Paupo has been disabled!
        ///You crafted a Paupo!
        ///You crafted [amount] Paupos!
        ///You don&apos;t have enough shards to craft a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_paupo {
            get {
                return ResourceManager.GetString("pet_paupo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raksuma Companion
        ///Raksumas
        ///A Raksuma follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Raksuma Companion!
        ///You received [amount] Raksumas!
        ///You found a Raksuma Companion!
        ///You found [amount] Raksumas!
        ///Do you wish to use a Raksuma on [nickname]?
        ///[nickname] doesn&apos;t need a Raksuma!
        ///You used a Raksuma on [nickname]!
        ///Your opponent used a Raksuma on [nickname]!
        ///Raksuma has been enabled!
        ///Raksuma has been disabled!
        ///You crafted a Raksuma!
        ///You crafted [amount] Raksumas!
        ///You don&apos;t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_raksuma {
            get {
                return ResourceManager.GetString("pet_raksuma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sandillo Companion
        ///Sandillos
        ///A Sandillo follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Sandillo Companion!
        ///You received [amount] Sandillos!
        ///You found a Sandillo Companion!
        ///You found [amount] Sandillos!
        ///Do you wish to use a Sandillo on [nickname]?
        ///[nickname] doesn&apos;t need a Sandillo!
        ///You used a Sandillo on [nickname]!
        ///Your opponent used a Sandillo on [nickname]!
        ///Sandillo has been enabled!
        ///Sandillo has been disabled!
        ///You crafted a Sandillo!
        ///You crafted [amount] Sandil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_sandillo {
            get {
                return ResourceManager.GetString("pet_sandillo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spektar Companion
        ///Spektars
        ///A Spektar follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Spektar Companion!
        ///You received [amount] Spektars!
        ///You found a Spektar Companion!
        ///You found [amount] Spektars!
        ///Do you wish to use a Spektar on [nickname]?
        ///[nickname] doesn&apos;t need a Spektar!
        ///You used a Spektar on [nickname]!
        ///Your opponent used a Spektar on [nickname]!
        ///Spektar has been enabled!
        ///Spektar has been disabled!
        ///You crafted a Spektar!
        ///You crafted [amount] Spektars!
        ///You don&apos;t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_spektar {
            get {
                return ResourceManager.GetString("pet_spektar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vodo Companion
        ///Vodos
        ///A Vodo follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Vodo Companion!
        ///You received [amount] Vodos!
        ///You found a Vodo Companion!
        ///You found [amount] Vodos!
        ///Do you wish to use a Vodo on [nickname]?
        ///[nickname] doesn&apos;t need a Vodo!
        ///You used a Vodo on [nickname]!
        ///Your opponent used a Vodo on [nickname]!
        ///Vodo has been enabled!
        ///Vodo has been disabled!
        ///You crafted a Vodo!
        ///You crafted [amount] Vodos!
        ///You don&apos;t have enough shards to craft a Vodo!
        ///You don [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_vodo {
            get {
                return ResourceManager.GetString("pet_vodo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wargoyle Companion
        ///Wargoyles
        ///A Wargoyle follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Wargoyle Companion!
        ///You received [amount] Wargoyles!
        ///You found a Wargoyle Companion!
        ///You found [amount] Wargoyles!
        ///Do you wish to use a Wargoyle on [nickname]?
        ///[nickname] doesn&apos;t need a Wargoyle!
        ///You used a Wargoyle on [nickname]!
        ///Your opponent used a Wargoyle on [nickname]!
        ///Wargoyle has been enabled!
        ///Wargoyle has been disabled!
        ///You crafted a Wargoyle!
        ///You crafted [amount] Wargoy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_wargoyle {
            get {
                return ResourceManager.GetString("pet_wargoyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Woozy Companion
        ///Woozies
        ///A Woozy follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Woozy Companion!
        ///You received [amount] Woozies!
        ///You found a Woozy Companion!
        ///You found [amount] Woozies!
        ///Do you wish to use a Woozy on [nickname]?
        ///[nickname] doesn&apos;t need a Woozy!
        ///You used a Woozy on [nickname]!
        ///Your opponent used a Woozy on [nickname]!
        ///Woozy has been enabled!
        ///Woozy has been disabled!
        ///You crafted a Woozy!
        ///You crafted [amount] Woozies!
        ///You don&apos;t have enough shards to cra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_woozy {
            get {
                return ResourceManager.GetString("pet_woozy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zumble Companion
        ///Zumbles
        ///A Zumble follower! Activate it in the profile menu.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Zumble Companion!
        ///You received [amount] Zumbles!
        ///You found a Zumble Companion!
        ///You found [amount] Zumbles!
        ///Do you wish to use a Zumble on [nickname]?
        ///[nickname] doesn&apos;t need a Zumble!
        ///You used a Zumble on [nickname]!
        ///Your opponent used a Zumble on [nickname]!
        ///Zumble has been enabled!
        ///Zumble has been disabled!
        ///You crafted a Zumble!
        ///You crafted [amount] Zumbles!
        ///You don&apos;t have enough sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pet_zumble {
            get {
                return ResourceManager.GetString("pet_zumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pickaxe
        ///Pickaxes
        ///A tool used to break small boulders that might contain elemental shards!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Pickaxe!
        ///You received [amount] Pickaxes!
        ///You found a Pickaxe!
        ///You found [amount] Pickaxes!
        ///Do you wish to use a Pickaxe on [nickname]?
        ///[nickname] doesn&apos;t need a Pickaxe!
        ///You used a Pickaxe on [nickname]!
        ///Your opponent used a Pickaxe on [nickname]!
        ///Pickaxe has been enabled!
        ///Pickaxe has been disabled!
        ///You crafted a Pickaxe!
        ///You crafted [amount] Pickaxes!
        ///You don&apos;t have enou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pickaxe {
            get {
                return ResourceManager.GetString("pickaxe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Potion
        ///Potions
        ///Restores [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Potion!
        ///You received [amount] Potions!
        ///You found a Potion!
        ///You found [amount] Potions!
        ///Do you wish to use a Potion on [nickname]?
        ///[nickname] doesn&apos;t need a Potion!
        ///You used a Potion on [nickname]!
        ///Your opponent used a Potion on [nickname]!
        ///Potion has been enabled!
        ///Potion has been disabled!
        ///You crafted a Potion!
        ///You crafted [amount] Potions!
        ///You don&apos;t have enough shards to craft a Potion!
        ///You don&apos;t have enough shards to cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string potion {
            get {
                return ResourceManager.GetString("potion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Potion
        ///Max Potions
        ///Restores [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Max Potion!
        ///You received [amount] Max Potions!
        ///You found a Max Potion!
        ///You found [amount] Max Potions!
        ///Do you wish to use a Max Potion on [nickname]?
        ///[nickname] doesn&apos;t need a Max Potion!
        ///You used a Max Potion on [nickname]!
        ///Your opponent used a Max Potion on [nickname]!
        ///Max Potion has been enabled!
        ///Max Potion has been disabled!
        ///You crafted a Max Potion!
        ///You crafted [amount] Max Potions!
        ///You don&apos;t have enough shard [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string potion_max {
            get {
                return ResourceManager.GetString("potion_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Super Potion
        ///Super Potions
        ///Restores [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Super Potion!
        ///You received [amount] Super Potions!
        ///You found a Super Potion!
        ///You found [amount] Super Potions!
        ///Do you wish to use a Super Potion on [nickname]?
        ///[nickname] doesn&apos;t need a Super Potion!
        ///You used a Super Potion on [nickname]!
        ///Your opponent used a Super Potion on [nickname]!
        ///Super Potion has been enabled!
        ///Super Potion has been disabled!
        ///You crafted a Super Potion!
        ///You crafted [amount] Super Potions!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string potion_super {
            get {
                return ResourceManager.GetString("potion_super", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ultra Potion
        ///Ultra Potions
        ///Restores [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ultra Potion!
        ///You received [amount] Ultra Potions!
        ///You found an Ultra Potion!
        ///You found [amount] Ultra Potions!
        ///Do you wish to use an Ultra Potion on [nickname]?
        ///[nickname] doesn&apos;t need an Ultra Potion!
        ///You used an Ultra Potion on [nickname]!
        ///Your opponent used an Ultra Potion on [nickname]!
        ///Ultra Potion has been enabled!
        ///Ultra Potion has been disabled!
        ///You crafted an Ultra Potion!
        ///You crafted [amount] Ultra Po [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string potion_ultra {
            get {
                return ResourceManager.GetString("potion_ultra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile of garbage
        ///Piles of garbage
        ///Rubbish that we found while cleaning up the city.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Pile of garbage!
        ///You received [amount] Piles of garbage!
        ///You found a Pile of garbage!
        ///You found [amount] Piles of garbage!
        ///Do you wish to use a Pile of garbage on [nickname]?
        ///[nickname] doesn&apos;t need a Pile of garbage!
        ///You used a Pile of garbage on [nickname]!
        ///Your opponent used a Pile of garbage on [nickname]!
        ///Pile of garbage has been enabled!
        ///Pile of garbage has been disabled!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quest_garbage {
            get {
                return ResourceManager.GetString("quest_garbage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lisa&apos;s lunch
        ///Lisa&apos;s lunch
        ///Food that Lisa, the Nexotrap crafter, made us pay for.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Lisa&apos;s lunch!
        ///You received [amount] Lisa&apos;s lunch!
        ///You found a Lisa&apos;s lunch!
        ///You found [amount] Lisa&apos;s lunch!
        ///Do you wish to use a Lisa&apos;s lunch on [nickname]?
        ///[nickname] doesn&apos;t need a Lisa&apos;s lunch!
        ///You used a Lisa&apos;s lunch on [nickname]!
        ///Your opponent used a Lisa&apos;s lunch on [nickname]!
        ///Lisa&apos;s lunch has been enabled!
        ///Lisa&apos;s lunch has been disabled!
        ///You crafted a Lisa&apos;s lunch!
        ///You cra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quest_lunch {
            get {
                return ResourceManager.GetString("quest_lunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental Lure
        ///Experimental Lures
        ///A strange lure that attracts &quot;extinct&quot; Nexomon to you while exploring the wild.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Experimental Lure!
        ///You received [amount] Experimental Lures!
        ///You found an Experimental Lure!
        ///You found [amount] Experimental Lures!
        ///Do you wish to use an Experimental Lure on [nickname]?
        ///[nickname] doesn&apos;t need an Experimental Lure!
        ///You used an Experimental Lure on [nickname]!
        ///Your opponent used an Experimental Lure on [nickname]!
        ///Experimental Lure [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quest_lure {
            get {
                return ResourceManager.GetString("quest_lure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precious Ring
        ///Precious Rings
        ///A very valuable ring! Someone must have lost it...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Precious Ring!
        ///You received [amount] Precious Rings!
        ///You found a Precious Ring!
        ///You found [amount] Precious Rings!
        ///Do you wish to use a Precious Ring on [nickname]?
        ///[nickname] doesn&apos;t need a Precious Ring!
        ///You used a Precious Ring on [nickname]!
        ///Your opponent used a Precious Ring on [nickname]!
        ///Precious Ring has been enabled!
        ///Precious Ring has been disabled!
        ///You crafted a Precious Ri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quest_ring {
            get {
                return ResourceManager.GetString("quest_ring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supply Box
        ///Supply Boxes
        ///A box full of valuable tamer supplies! Someone needs this delivered!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Supply Box!
        ///You received [amount] Supply Boxes!
        ///You found a Supply Box!
        ///You found [amount] Supply Boxes!
        ///Do you wish to use a Supply Box on [nickname]?
        ///[nickname] doesn&apos;t need a Supply Box!
        ///You used a Supply Box on [nickname]!
        ///Your opponent used a Supply Box on [nickname]!
        ///Supply Box has been enabled!
        ///Supply Box has been disabled!
        ///You crafted a Supply Box!
        ///You crafted [ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string quest_supplies {
            get {
                return ResourceManager.GetString("quest_supplies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tyrant Relic
        ///Tyrant Relics
        ///An ancient relic that once belonged to a so-called &quot;Tyrant of Light&quot;...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Tyrant Relic!
        ///You received [amount] Tyrant Relics!
        ///You found a Tyrant Relic!
        ///You found [amount] Tyrant Relics!
        ///Do you wish to use a Tyrant Relic on [nickname]?
        ///[nickname] doesn&apos;t need a Tyrant Relic!
        ///You used a Tyrant Relic on [nickname]!
        ///Your opponent used a Tyrant Relic on [nickname]!
        ///Tyrant Relic has been enabled!
        ///Tyrant Relic has been disabled!
        ///You crafted a Ty [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string relic_tyrant {
            get {
                return ResourceManager.GetString("relic_tyrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revive
        ///Revives
        ///Restores a fainted Nexomon along with [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Revive!
        ///You received [amount] Revives!
        ///You found a Revive!
        ///You found [amount] Revives!
        ///Do you wish to use a Revive on [nickname]?
        ///[nickname] doesn&apos;t need a Revive!
        ///You used a Revive on [nickname]!
        ///Your opponent used a Revive on [nickname]!
        ///Revive has been enabled!
        ///Revive has been disabled!
        ///You crafted a Revive!
        ///You crafted [amount] Revives!
        ///You don&apos;t have enough shards to craft a Revive!
        ///You d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string revive {
            get {
                return ResourceManager.GetString("revive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Super Revive
        ///Super Revives
        ///Restores a fainted Nexomon along with [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Super Revive!
        ///You received [amount] Super Revives!
        ///You found a Super Revive!
        ///You found [amount] Super Revives!
        ///Do you wish to use a Super Revive on [nickname]?
        ///[nickname] doesn&apos;t need a Super Revive!
        ///You used a Super Revive on [nickname]!
        ///Your opponent used a Super Revive on [nickname]!
        ///Super Revive has been enabled!
        ///Super Revive has been disabled!
        ///You crafted a Super Revive!
        ///You cra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string revive_super {
            get {
                return ResourceManager.GetString("revive_super", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ultra Revive
        ///Ultra Revives
        ///Restores a fainted Nexomon along with [value_1] HP.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ultra Revive!
        ///You received [amount] Ultra Revives!
        ///You found an Ultra Revive!
        ///You found [amount] Ultra Revives!
        ///Do you wish to use an Ultra Revive on [nickname]?
        ///[nickname] doesn&apos;t need an Ultra Revive!
        ///You used an Ultra Revive on [nickname]!
        ///Your opponent used an Ultra Revive on [nickname]!
        ///Ultra Revive has been enabled!
        ///Ultra Revive has been disabled!
        ///You crafted an Ultra Revive!
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string revive_ultra {
            get {
                return ResourceManager.GetString("revive_ultra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thunder Shard
        ///Thunder Shards
        ///An Electric-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Thunder Shard!
        ///You received [amount] Thunder Shards!
        ///You found a Thunder Shard!
        ///You found [amount] Thunder Shards!
        ///Do you wish to use a Thunder Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Thunder Shard!
        ///You used a Thunder Shard on [nickname]!
        ///Your opponent used a Thunder Shard on [nickname]!
        ///Thunder Shard has been enabled!
        ///Thunder Shard has been disabled!
        ///You crafte [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_electric {
            get {
                return ResourceManager.GetString("shard_electric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blazing Shard
        ///Blazing Shards
        ///A Fire-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Blazing Shard!
        ///You received [amount] Blazing Shards!
        ///You found a Blazing Shard!
        ///You found [amount] Blazing Shards!
        ///Do you wish to use a Blazing Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Blazing Shard!
        ///You used a Blazing Shard on [nickname]!
        ///Your opponent used a Blazing Shard on [nickname]!
        ///Blazing Shard has been enabled!
        ///Blazing Shard has been disabled!
        ///You crafted a B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_fire {
            get {
                return ResourceManager.GetString("shard_fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phantom Shard
        ///Phantom Shards
        ///A Ghost-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Phantom Shard!
        ///You received [amount] Phantom Shards!
        ///You found a Phantom Shard!
        ///You found [amount] Phantom Shards!
        ///Do you wish to use a Phantom Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Phantom Shard!
        ///You used a Phantom Shard on [nickname]!
        ///Your opponent used a Phantom Shard on [nickname]!
        ///Phantom Shard has been enabled!
        ///Phantom Shard has been disabled!
        ///You crafted a  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_ghost {
            get {
                return ResourceManager.GetString("shard_ghost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stone Shard
        ///Stone Shards
        ///A Mineral-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Stone Shard!
        ///You received [amount] Stone Shards!
        ///You found a Stone Shard!
        ///You found [amount] Stone Shards!
        ///Do you wish to use a Stone Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Stone Shard!
        ///You used a Stone Shard on [nickname]!
        ///Your opponent used a Stone Shard on [nickname]!
        ///Stone Shard has been enabled!
        ///Stone Shard has been disabled!
        ///You crafted a Stone Shard!
        ///You craf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_mineral {
            get {
                return ResourceManager.GetString("shard_mineral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power Shard
        ///Power Shards
        ///A Normal-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Power Shard!
        ///You received [amount] Power Shards!
        ///You found a Power Shard!
        ///You found [amount] Power Shards!
        ///Do you wish to use a Power Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Power Shard!
        ///You used a Power Shard on [nickname]!
        ///Your opponent used a Power Shard on [nickname]!
        ///Power Shard has been enabled!
        ///Power Shard has been disabled!
        ///You crafted a Power Shard!
        ///You craft [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_normal {
            get {
                return ResourceManager.GetString("shard_normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nature Shard
        ///Nature Shards
        ///A Plant-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Nature Shard!
        ///You received [amount] Nature Shards!
        ///You found a Nature Shard!
        ///You found [amount] Nature Shards!
        ///Do you wish to use a Nature Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Nature Shard!
        ///You used a Nature Shard on [nickname]!
        ///Your opponent used a Nature Shard on [nickname]!
        ///Nature Shard has been enabled!
        ///Nature Shard has been disabled!
        ///You crafted a Nature Shard [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_plant {
            get {
                return ResourceManager.GetString("shard_plant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mind Shard
        ///Mind Shards
        ///A Psychic-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Mind Shard!
        ///You received [amount] Mind Shards!
        ///You found a Mind Shard!
        ///You found [amount] Mind Shards!
        ///Do you wish to use a Mind Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Mind Shard!
        ///You used a Mind Shard on [nickname]!
        ///Your opponent used a Mind Shard on [nickname]!
        ///Mind Shard has been enabled!
        ///Mind Shard has been disabled!
        ///You crafted a Mind Shard!
        ///You crafted [amount]  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_psychic {
            get {
                return ResourceManager.GetString("shard_psychic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ocean Shard
        ///Ocean Shards
        ///A Water-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Ocean Shard!
        ///You received [amount] Ocean Shards!
        ///You found an Ocean Shard!
        ///You found [amount] Ocean Shards!
        ///Do you wish to use an Ocean Shard on [nickname]?
        ///[nickname] doesn&apos;t need an Ocean Shard!
        ///You used an Ocean Shard on [nickname]!
        ///Your opponent used an Ocean Shard on [nickname]!
        ///Ocean Shard has been enabled!
        ///Ocean Shard has been disabled!
        ///You crafted an Ocean Shard!
        ///You [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_water {
            get {
                return ResourceManager.GetString("shard_water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tempest Shard
        ///Tempest Shards
        ///A Wind-type elemental shard. Use it for crafting or selling!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Tempest Shard!
        ///You received [amount] Tempest Shards!
        ///You found a Tempest Shard!
        ///You found [amount] Tempest Shards!
        ///Do you wish to use a Tempest Shard on [nickname]?
        ///[nickname] doesn&apos;t need a Tempest Shard!
        ///You used a Tempest Shard on [nickname]!
        ///Your opponent used a Tempest Shard on [nickname]!
        ///Tempest Shard has been enabled!
        ///Tempest Shard has been disabled!
        ///You crafted a T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string shard_wind {
            get {
                return ResourceManager.GetString("shard_wind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CHALLENGE BADGE
        ///CHALLENGE BADGES
        ///Tamers across the world will want to rematch you even sooner!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a CHALLENGE BADGE!
        ///You received [amount] CHALLENGE BADGES!
        ///You found a CHALLENGE BADGE!
        ///You found [amount] CHALLENGE BADGES!
        ///Do you wish to use a CHALLENGE BADGE on [nickname]?
        ///[nickname] doesn&apos;t need a CHALLENGE BADGE!
        ///You used a CHALLENGE BADGE on [nickname]!
        ///Your opponent used a CHALLENGE BADGE on [nickname]!
        ///CHALLENGE BADGE has been enabled!
        ///CHALLENGE BADGE has been d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_challenge_badge {
            get {
                return ResourceManager.GetString("special_challenge_badge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cosmic Charm
        ///Cosmic Charms
        ///It&apos;s said that this improves the chance of finding very peculiar Nexomon...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Cosmic Charm!
        ///You received [amount] Cosmic Charms!
        ///You found a Cosmic Charm!
        ///You found [amount] Cosmic Charms!
        ///Do you wish to use a Cosmic Charm on [nickname]?
        ///[nickname] doesn&apos;t need a Cosmic Charm!
        ///You used a Cosmic Charm on [nickname]!
        ///Your opponent used a Cosmic Charm on [nickname]!
        ///Cosmic Charm has been enabled!
        ///Cosmic Charm has been disabled!
        ///You crafted  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_charm_cosmic {
            get {
                return ResourceManager.GetString("special_charm_cosmic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workout Charm
        ///Workout Charms
        ///Causes your team to restore [value_1]% stamina after each battle. This can be stacked.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Workout Charm!
        ///You received [amount] Workout Charms!
        ///You found a Workout Charm!
        ///You found [amount] Workout Charms!
        ///Do you wish to use a Workout Charm on [nickname]?
        ///[nickname] doesn&apos;t need a Workout Charm!
        ///You used a Workout Charm on [nickname]!
        ///Your opponent used a Workout Charm on [nickname]!
        ///Workout Charm has been enabled!
        ///Workout Charm has been  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_charm_energy {
            get {
                return ResourceManager.GetString("special_charm_energy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Healthy Charm
        ///Healthy Charms
        ///Causes your team to restore [value_1]% HP after each battle. This can be stacked.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a Healthy Charm!
        ///You received [amount] Healthy Charms!
        ///You found a Healthy Charm!
        ///You found [amount] Healthy Charms!
        ///Do you wish to use a Healthy Charm on [nickname]?
        ///[nickname] doesn&apos;t need a Healthy Charm!
        ///You used a Healthy Charm on [nickname]!
        ///Your opponent used a Healthy Charm on [nickname]!
        ///Healthy Charm has been enabled!
        ///Healthy Charm has been disab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_charm_health {
            get {
                return ResourceManager.GetString("special_charm_health", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DISCOUNT VOUCHER
        ///DISCOUNT VOUCHERS
        ///Merchants will lower their prices by [value_1]%! This item can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a DISCOUNT VOUCHER!
        ///You received [amount] DISCOUNT VOUCHERS!
        ///You found a DISCOUNT VOUCHER!
        ///You found [amount] DISCOUNT VOUCHERS!
        ///Do you wish to use a DISCOUNT VOUCHER on [nickname]?
        ///[nickname] doesn&apos;t need a DISCOUNT VOUCHER!
        ///You used a DISCOUNT VOUCHER on [nickname]!
        ///Your opponent used a DISCOUNT VOUCHER on [nickname]!
        ///DISCOUNT VOUCHER has been enabled!
        ///DI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_discount_voucher {
            get {
                return ResourceManager.GetString("special_discount_voucher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXP BOOSTER
        ///EXP BOOSTERS
        ///Having this item in your inventory causes enemies to yield [value_1]% more EXP! This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an EXP BOOSTER!
        ///You received [amount] EXP BOOSTERS!
        ///You found an EXP BOOSTER!
        ///You found [amount] EXP BOOSTERS!
        ///Do you wish to use an EXP BOOSTER on [nickname]?
        ///[nickname] doesn&apos;t need an EXP BOOSTER!
        ///You used an EXP BOOSTER on [nickname]!
        ///Your opponent used an EXP BOOSTER on [nickname]!
        ///EXP BOOSTER has been enabled!
        ///EXP BOOSTER has been disa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_exp_booster {
            get {
                return ResourceManager.GetString("special_exp_booster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXP MULTIPLIER
        ///EXP MULTIPLIERS
        ///Any EXP received will be split among all your party members. You can enable or disable this item.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an EXP MULTIPLIER!
        ///You received [amount] EXP MULTIPLIERS!
        ///You found an EXP MULTIPLIER!
        ///You found [amount] EXP MULTIPLIERS!
        ///Do you wish to use an EXP MULTIPLIER on [nickname]?
        ///[nickname] doesn&apos;t need an EXP MULTIPLIER!
        ///You used an EXP MULTIPLIER on [nickname]!
        ///Your opponent used an EXP MULTIPLIER on [nickname]!
        ///EXP MULTIPLIER has been enabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_exp_multiplier {
            get {
                return ResourceManager.GetString("special_exp_multiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GREED WALLET
        ///GREED WALLETS
        ///Having this item in your inventory causes battles to yield [value_1]% more coins! This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a GREED WALLET!
        ///You received [amount] GREED WALLETS!
        ///You found a GREED WALLET!
        ///You found [amount] GREED WALLETS!
        ///Do you wish to use a GREED WALLET on [nickname]?
        ///[nickname] doesn&apos;t need a GREED WALLET!
        ///You used a GREED WALLET on [nickname]!
        ///Your opponent used a GREED WALLET on [nickname]!
        ///GREED WALLET has been enabled!
        ///GREED WALLET has b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_greed_wallet {
            get {
                return ResourceManager.GetString("special_greed_wallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LEVEL UP BERRY
        ///LEVEL UP BERRIES
        ///Feed this to a Nexomon to increase their level!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a LEVEL UP BERRY!
        ///You received [amount] LEVEL UP BERRIES!
        ///You found a LEVEL UP BERRY!
        ///You found [amount] LEVEL UP BERRIES!
        ///Do you wish to use a LEVEL UP BERRY on [nickname]?
        ///[nickname] doesn&apos;t need a LEVEL UP BERRY!
        ///You used a LEVEL UP BERRY on [nickname]!
        ///Your opponent used a LEVEL UP BERRY on [nickname]!
        ///LEVEL UP BERRY has been enabled!
        ///LEVEL UP BERRY has been disabled!
        ///You crafted a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_level_up {
            get {
                return ResourceManager.GetString("special_level_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MINER&apos;S GOGGLES
        ///MINER&apos;S GOGGLES
        ///With this item, ore boulders will take less time to respawn!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a MINER&apos;S GOGGLES!
        ///You received [amount] MINER&apos;S GOGGLES!
        ///You found a MINER&apos;S GOGGLES!
        ///You found [amount] MINER&apos;S GOGGLES!
        ///Do you wish to use a MINER&apos;S GOGGLES on [nickname]?
        ///[nickname] doesn&apos;t need a MINER&apos;S GOGGLES!
        ///You used a MINER&apos;S GOGGLES on [nickname]!
        ///Your opponent used a MINER&apos;S GOGGLES on [nickname]!
        ///MINER&apos;S GOGGLES has been enabled!
        ///MINER&apos;S GOGGLES has been disab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_mining_goggles {
            get {
                return ResourceManager.GetString("special_mining_goggles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RADAR
        ///RADARS
        ///Now you can check which Nexomon can be found nearby!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a RADAR!
        ///You received [amount] RADARS!
        ///You found a RADAR!
        ///You found [amount] RADARS!
        ///Do you wish to use a RADAR on [nickname]?
        ///[nickname] doesn&apos;t need a RADAR!
        ///You used a RADAR on [nickname]!
        ///Your opponent used a RADAR on [nickname]!
        ///RADAR has been enabled!
        ///RADAR has been disabled!
        ///You crafted a RADAR!
        ///You crafted [amount] RADARS!
        ///You don&apos;t have enough shards to craft a RADAR!
        ///You don&apos;t have enou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_radar {
            get {
                return ResourceManager.GetString("special_radar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REPEL SPRAY
        ///REPEL SPRAYS
        ///Avoids any wild battle, including caves! You can enable or disable this item.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a REPEL SPRAY!
        ///You received [amount] REPEL SPRAYS!
        ///You found a REPEL SPRAY!
        ///You found [amount] REPEL SPRAYS!
        ///Do you wish to use a REPEL SPRAY on [nickname]?
        ///[nickname] doesn&apos;t need a REPEL SPRAY!
        ///You used a REPEL SPRAY on [nickname]!
        ///Your opponent used a REPEL SPRAY on [nickname]!
        ///REPEL SPRAY has been enabled!
        ///REPEL SPRAY has been disabled!
        ///You crafted a REPEL SP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_repel {
            get {
                return ResourceManager.GetString("special_repel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RUNNING SHOES
        ///RUNNING SHOES
        ///Having this item guarantees that you can escape from any wild battle.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a RUNNING SHOES!
        ///You received [amount] RUNNING SHOES!
        ///You found a RUNNING SHOES!
        ///You found [amount] RUNNING SHOES!
        ///Do you wish to use a RUNNING SHOES on [nickname]?
        ///[nickname] doesn&apos;t need a RUNNING SHOES!
        ///You used a RUNNING SHOES on [nickname]!
        ///Your opponent used a RUNNING SHOES on [nickname]!
        ///RUNNING SHOES has been enabled!
        ///RUNNING SHOES has been disabled!
        ///You craft [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_running_shoes {
            get {
                return ResourceManager.GetString("special_running_shoes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SECRET SAUCE
        ///SECRET SAUCES
        ///Any meal you feed a wild Nexomon will be [value_1]% more effective. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a SECRET SAUCE!
        ///You received [amount] SECRET SAUCES!
        ///You found a SECRET SAUCE!
        ///You found [amount] SECRET SAUCES!
        ///Do you wish to use a SECRET SAUCE on [nickname]?
        ///[nickname] doesn&apos;t need a SECRET SAUCE!
        ///You used a SECRET SAUCE on [nickname]!
        ///Your opponent used a SECRET SAUCE on [nickname]!
        ///SECRET SAUCE has been enabled!
        ///SECRET SAUCE has been disabled!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_secret_sauce {
            get {
                return ResourceManager.GetString("special_secret_sauce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TEAM CURE
        ///TEAM CURES
        ///Restores your entire party! Can only be used outside battles.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a TEAM CURE!
        ///You received [amount] TEAM CURES!
        ///You found a TEAM CURE!
        ///You found [amount] TEAM CURES!
        ///Do you wish to use a TEAM CURE on [nickname]?
        ///[nickname] doesn&apos;t need a TEAM CURE!
        ///You used a TEAM CURE on [nickname]!
        ///Your opponent used a TEAM CURE on [nickname]!
        ///TEAM CURE has been enabled!
        ///TEAM CURE has been disabled!
        ///You crafted a TEAM CURE!
        ///You crafted [amount] TEAM CURES!
        ///Yo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_team_cure {
            get {
                return ResourceManager.GetString("special_team_cure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ULTRA PICKAXE
        ///ULTRA PICKAXES
        ///With this, mining ore boulders will yield more shards than usual!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an ULTRA PICKAXE!
        ///You received [amount] ULTRA PICKAXES!
        ///You found an ULTRA PICKAXE!
        ///You found [amount] ULTRA PICKAXES!
        ///Do you wish to use an ULTRA PICKAXE on [nickname]?
        ///[nickname] doesn&apos;t need an ULTRA PICKAXE!
        ///You used an ULTRA PICKAXE on [nickname]!
        ///Your opponent used an ULTRA PICKAXE on [nickname]!
        ///ULTRA PICKAXE has been enabled!
        ///ULTRA PICKAXE has been disabled!
        ///You  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_ultra_pickaxe {
            get {
                return ResourceManager.GetString("special_ultra_pickaxe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DRAGON WHISTLE
        ///DRAGON WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture dragons. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a DRAGON WHISTLE!
        ///You received [amount] DRAGON WHISTLES!
        ///You found a DRAGON WHISTLE!
        ///You found [amount] DRAGON WHISTLES!
        ///Do you wish to use a DRAGON WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a DRAGON WHISTLE!
        ///You used a DRAGON WHISTLE on [nickname]!
        ///Your opponent used a DRAGON WHISTLE on [nickname]!
        ///DRAGON WHISTLE has been enabled!
        ///DRAGO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_dragon {
            get {
                return ResourceManager.GetString("special_whistle_dragon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ELECTRIC WHISTLE
        ///ELECTRIC WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Electric-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an ELECTRIC WHISTLE!
        ///You received [amount] ELECTRIC WHISTLES!
        ///You found an ELECTRIC WHISTLE!
        ///You found [amount] ELECTRIC WHISTLES!
        ///Do you wish to use an ELECTRIC WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need an ELECTRIC WHISTLE!
        ///You used an ELECTRIC WHISTLE on [nickname]!
        ///Your opponent used an ELECTRIC WHISTLE on [nickname]!        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_electric {
            get {
                return ResourceManager.GetString("special_whistle_electric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FIRE WHISTLE
        ///FIRE WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Fire-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a FIRE WHISTLE!
        ///You received [amount] FIRE WHISTLES!
        ///You found a FIRE WHISTLE!
        ///You found [amount] FIRE WHISTLES!
        ///Do you wish to use a FIRE WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a FIRE WHISTLE!
        ///You used a FIRE WHISTLE on [nickname]!
        ///Your opponent used a FIRE WHISTLE on [nickname]!
        ///FIRE WHISTLE has been enabled!
        ///FIRE WHISTLE has  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_fire {
            get {
                return ResourceManager.GetString("special_whistle_fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GHOST WHISTLE
        ///GHOST WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Ghost-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a GHOST WHISTLE!
        ///You received [amount] GHOST WHISTLES!
        ///You found a GHOST WHISTLE!
        ///You found [amount] GHOST WHISTLES!
        ///Do you wish to use a GHOST WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a GHOST WHISTLE!
        ///You used a GHOST WHISTLE on [nickname]!
        ///Your opponent used a GHOST WHISTLE on [nickname]!
        ///GHOST WHISTLE has been enabled!
        ///GHOST [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_ghost {
            get {
                return ResourceManager.GetString("special_whistle_ghost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MINERAL WHISTLE
        ///MINERAL WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Mineral-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a MINERAL WHISTLE!
        ///You received [amount] MINERAL WHISTLES!
        ///You found a MINERAL WHISTLE!
        ///You found [amount] MINERAL WHISTLES!
        ///Do you wish to use a MINERAL WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a MINERAL WHISTLE!
        ///You used a MINERAL WHISTLE on [nickname]!
        ///Your opponent used a MINERAL WHISTLE on [nickname]!
        ///MINERAL WHISTLE  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_mineral {
            get {
                return ResourceManager.GetString("special_whistle_mineral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NORMAL WHISTLE
        ///NORMAL WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Normal-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a NORMAL WHISTLE!
        ///You received [amount] NORMAL WHISTLES!
        ///You found a NORMAL WHISTLE!
        ///You found [amount] NORMAL WHISTLES!
        ///Do you wish to use a NORMAL WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a NORMAL WHISTLE!
        ///You used a NORMAL WHISTLE on [nickname]!
        ///Your opponent used a NORMAL WHISTLE on [nickname]!
        ///NORMAL WHISTLE has been ena [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_normal {
            get {
                return ResourceManager.GetString("special_whistle_normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLANT WHISTLE
        ///PLANT WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Plant-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a PLANT WHISTLE!
        ///You received [amount] PLANT WHISTLES!
        ///You found a PLANT WHISTLE!
        ///You found [amount] PLANT WHISTLES!
        ///Do you wish to use a PLANT WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a PLANT WHISTLE!
        ///You used a PLANT WHISTLE on [nickname]!
        ///Your opponent used a PLANT WHISTLE on [nickname]!
        ///PLANT WHISTLE has been enabled!
        ///PLANT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_plant {
            get {
                return ResourceManager.GetString("special_whistle_plant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PSYCHIC WHISTLE
        ///PSYCHIC WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Psychic-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a PSYCHIC WHISTLE!
        ///You received [amount] PSYCHIC WHISTLES!
        ///You found a PSYCHIC WHISTLE!
        ///You found [amount] PSYCHIC WHISTLES!
        ///Do you wish to use a PSYCHIC WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a PSYCHIC WHISTLE!
        ///You used a PSYCHIC WHISTLE on [nickname]!
        ///Your opponent used a PSYCHIC WHISTLE on [nickname]!
        ///PSYCHIC WHISTLE  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_psychic {
            get {
                return ResourceManager.GetString("special_whistle_psychic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TYRANT WHISTLE
        ///TYRANT WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Tyrant Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a TYRANT WHISTLE!
        ///You received [amount] TYRANT WHISTLES!
        ///You found a TYRANT WHISTLE!
        ///You found [amount] TYRANT WHISTLES!
        ///Do you wish to use a TYRANT WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a TYRANT WHISTLE!
        ///You used a TYRANT WHISTLE on [nickname]!
        ///Your opponent used a TYRANT WHISTLE on [nickname]!
        ///TYRANT WHISTLE has been enabled! [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_tyrant {
            get {
                return ResourceManager.GetString("special_whistle_tyrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WATER WHISTLE
        ///WATER WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Water-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a WATER WHISTLE!
        ///You received [amount] WATER WHISTLES!
        ///You found a WATER WHISTLE!
        ///You found [amount] WATER WHISTLES!
        ///Do you wish to use a WATER WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a WATER WHISTLE!
        ///You used a WATER WHISTLE on [nickname]!
        ///Your opponent used a WATER WHISTLE on [nickname]!
        ///WATER WHISTLE has been enabled!
        ///WATER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_water {
            get {
                return ResourceManager.GetString("special_whistle_water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WIND WHISTLE
        ///WIND WHISTLES
        ///With this item, NexoTraps are [value_1]% more likely to capture Wind-Type Nexomon. This can be stacked!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a WIND WHISTLE!
        ///You received [amount] WIND WHISTLES!
        ///You found a WIND WHISTLE!
        ///You found [amount] WIND WHISTLES!
        ///Do you wish to use a WIND WHISTLE on [nickname]?
        ///[nickname] doesn&apos;t need a WIND WHISTLE!
        ///You used a WIND WHISTLE on [nickname]!
        ///Your opponent used a WIND WHISTLE on [nickname]!
        ///WIND WHISTLE has been enabled!
        ///WIND WHISTLE has  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string special_whistle_wind {
            get {
                return ResourceManager.GetString("special_whistle_wind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SingularName
        ///PluralName
        ///Description
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received a SingularName!
        ///You received [amount] PluralName!
        ///You found a SingularName!
        ///You found [amount] PluralName!
        ///Do you wish to use a SingularName on [nickname]?
        ///[nickname] doesn&apos;t need a SingularName!
        ///You used a SingularName on [nickname]!
        ///Your opponent used a SingularName on [nickname]!
        ///SingularName has been enabled!
        ///SingularName has been disabled!
        ///You crafted a SingularName!
        ///You crafted [amount] PluralName!
        ///You don&apos;t have enough  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string template {
            get {
                return ResourceManager.GetString("template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Airship Ticket
        ///Airship Tickets
        ///Use this ticket to board the Drake Isles airship.
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received an Airship Ticket!
        ///You received [amount] Airship Tickets!
        ///You found an Airship Ticket!
        ///You found [amount] Airship Tickets!
        ///Do you wish to use an Airship Ticket on [nickname]?
        ///[nickname] doesn&apos;t need an Airship Ticket!
        ///You used an Airship Ticket on [nickname]!
        ///Your opponent used an Airship Ticket on [nickname]!
        ///Airship Ticket has been enabled!
        ///Airship Ticket has been disabled!
        ///You craf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ticket_airship {
            get {
                return ResourceManager.GetString("ticket_airship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Thunder
        ///Tributes of Thunder
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Thunder!
        ///You received [amount] Tributes of Thunder!
        ///You found the Tribute of Thunder!
        ///You found [amount] Tributes of Thunder!
        ///Do you wish to use the Tribute of Thunder on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Thunder!
        ///You used the Tribute of Thunder on [nickname]!
        ///Your opponent used the Tribute of Thunder on [nickname]!
        ///Tribute of Thunder has been e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_electric {
            get {
                return ResourceManager.GetString("tribute_electric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Blaze
        ///Tributes of Blaze
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Blaze!
        ///You received [amount] Tributes of Blaze!
        ///You found the Tribute of Blaze!
        ///You found [amount] Tributes of Blaze!
        ///Do you wish to use the Tribute of Blaze on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Blaze!
        ///You used the Tribute of Blaze on [nickname]!
        ///Your opponent used the Tribute of Blaze on [nickname]!
        ///Tribute of Blaze has been enabled!
        ///Tribute of Bl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_fire {
            get {
                return ResourceManager.GetString("tribute_fire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Decay
        ///Tributes of Decay
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Decay!
        ///You received [amount] Tributes of Decay!
        ///You found the Tribute of Decay!
        ///You found [amount] Tributes of Decay!
        ///Do you wish to use the Tribute of Decay on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Decay!
        ///You used the Tribute of Decay on [nickname]!
        ///Your opponent used the Tribute of Decay on [nickname]!
        ///Tribute of Decay has been enabled!
        ///Tribute of De [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_ghost {
            get {
                return ResourceManager.GetString("tribute_ghost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Stone
        ///Tributes of Stone
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Stone!
        ///You received [amount] Tributes of Stone!
        ///You found the Tribute of Stone!
        ///You found [amount] Tributes of Stone!
        ///Do you wish to use the Tribute of Stone on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Stone!
        ///You used the Tribute of Stone on [nickname]!
        ///Your opponent used the Tribute of Stone on [nickname]!
        ///Tribute of Stone has been enabled!
        ///Tribute of St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_mineral {
            get {
                return ResourceManager.GetString("tribute_mineral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Power
        ///Tributes of Power
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Power!
        ///You received [amount] Tributes of Power!
        ///You found the Tribute of Power!
        ///You found [amount] Tributes of Power!
        ///Do you wish to use the Tribute of Power on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Power!
        ///You used the Tribute of Power on [nickname]!
        ///Your opponent used the Tribute of Power on [nickname]!
        ///Tribute of Power has been enabled!
        ///Tribute of Po [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_normal {
            get {
                return ResourceManager.GetString("tribute_normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Nature
        ///Tributes of Nature
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Nature!
        ///You received [amount] Tributes of Nature!
        ///You found the Tribute of Nature!
        ///You found [amount] Tributes of Nature!
        ///Do you wish to use the Tribute of Nature on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Nature!
        ///You used the Tribute of Nature on [nickname]!
        ///Your opponent used the Tribute of Nature on [nickname]!
        ///Tribute of Nature has been enabled!
        ///Tr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_plant {
            get {
                return ResourceManager.GetString("tribute_plant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Mind
        ///Tributes of Mind
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Mind!
        ///You received [amount] Tributes of Mind!
        ///You found the Tribute of Mind!
        ///You found [amount] Tributes of Mind!
        ///Do you wish to use the Tribute of Mind on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Mind!
        ///You used the Tribute of Mind on [nickname]!
        ///Your opponent used the Tribute of Mind on [nickname]!
        ///Tribute of Mind has been enabled!
        ///Tribute of Mind has been [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_psychic {
            get {
                return ResourceManager.GetString("tribute_psychic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Ocean
        ///Tributes of Ocean
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Ocean!
        ///You received [amount] Tributes of Ocean!
        ///You found the Tribute of Ocean!
        ///You found [amount] Tributes of Ocean!
        ///Do you wish to use the Tribute of Ocean on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Ocean!
        ///You used the Tribute of Ocean on [nickname]!
        ///Your opponent used the Tribute of Ocean on [nickname]!
        ///Tribute of Ocean has been enabled!
        ///Tribute of Oc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_water {
            get {
                return ResourceManager.GetString("tribute_water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tribute of Tempest
        ///Tributes of Tempest
        ///An ancient elemental relic emitting a faint aura...
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Tribute of Tempest!
        ///You received [amount] Tributes of Tempest!
        ///You found the Tribute of Tempest!
        ///You found [amount] Tributes of Tempest!
        ///Do you wish to use the Tribute of Tempest on [nickname]?
        ///[nickname] doesn&apos;t need the Tribute of Tempest!
        ///You used the Tribute of Tempest on [nickname]!
        ///Your opponent used the Tribute of Tempest on [nickname]!
        ///Tribute of Tempest has been e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tribute_wind {
            get {
                return ResourceManager.GetString("tribute_wind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drake Vial
        ///Drake Vials
        ///A mysterious substance developed to lure dragons!
        ///&lt;blank&gt;
        ///&lt;blank&gt;
        ///You received the Drake Vial!
        ///You received [amount] Drake Vials!
        ///You found the Drake Vial!
        ///You found [amount] Drake Vials!
        ///Do you wish to use the Drake Vial on [nickname]?
        ///[nickname] doesn&apos;t need the Drake Vial!
        ///You used the Drake Vial on [nickname]!
        ///Your opponent used the Drake Vial on [nickname]!
        ///Drake Vial has been enabled!
        ///Drake Vial has been disabled!
        ///You crafted the Drake Vial!
        ///You crafted [amount]  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vial_drake {
            get {
                return ResourceManager.GetString("vial_drake", resourceCulture);
            }
        }
    }
}
